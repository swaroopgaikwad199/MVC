@model TnT.Models.TraceLinkImporter.M_SOM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Home/_Layout.cshtml";
}

<h2>
    @TnT.LangResource.GlobalRes.SOMEdit
    <a style="float:right; margin-right:5px;" href='@Url.Action("Index", "SOM")' class="btn btn-danger btn-icon icon-left">
       @TnT.LangResource.GlobalRes.cmnBtnBackToList
        <i class="fa fa-reply"></i>
    </a>
</h2>

@using (Html.BeginForm("Edit/" + @Model.Id, "SOM", FormMethod.Post, new { @id = "frmSOM" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        </h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedOn)
        @Html.HiddenFor(model => model.IsDeleted)


        <h3>@TnT.LangResource.GlobalRes.SOMEditSenderDetails</h3>
        <div class="row">
            <div class="col-lg-6" style="display:none">
                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BusinessId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomBusinessName, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomCountry, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.Country_Con, @TnT.LangResource.GlobalRes.ProductDrpSelectCountry, new { @class = "form-control", @validate = "true" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateOrRegion, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.StateOrRegion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StateOrRegion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomCountry, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.Country_Con, "Select Type", new { @class = "form-control", @validate = "true" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6" style="display:none">
                <div class="form-group">
                    @Html.LabelFor(model => model.FacilityId_GLN, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FacilityId_GLN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacilityId_GLN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FromBusinessPartyLookupId, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomToBusinessPartyLookupId, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FromBusinessPartyLookupId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FromBusinessPartyLookupId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ShipFromLocationLookupId, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomLocationLookUpId, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ShipFromLocationLookupId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShipFromLocationLookupId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <h3>@TnT.LangResource.GlobalRes.SOMEditReceiverDetails</h3>
        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FacilityId_SGLN, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FacilityId_SGLN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacilityId_SGLN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_BusinessName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SFLI_BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SFLI_BusinessName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_Street1, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SFLI_Street1, new { htmlAttributes = new { @class = "form-control" } })
                   
                        @Html.ValidationMessageFor(model => model.SFLI_Street1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_City, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SFLI_City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SFLI_City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="display:none">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_StateOrRegion, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SFLI_StateOrRegion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SFLI_StateOrRegion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_PostalCode, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SFLI_PostalCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" } })
                        @Html.ValidationMessageFor(model => model.SFLI_PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryNumber, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomDeliveryNumber, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DeliveryNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryCompleteFlag, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomDeliveryCompleteFlag, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DeliveryCompleteFlag, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.DeliveryCompleteFlag, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionIdentifier, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomTransactionIdentifier, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.TransactionIdentifier, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransactionIdentifier, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomTransactionDate, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control datepicker", @style = "width: 150%;", @validate = "true" } })
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SalesDistributionType, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomSalesDistribution, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.SalesDistributionType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalesDistributionType, "", new { @class = "text-danger" })*@
                        <select id="saleType" name="SalesDistributionType" class="form-control">
                           
                            <option value="">@TnT.LangResource.GlobalRes.SOMCreateSelectOne</option>
                            <option value="EXPORTRETURN">@TnT.LangResource.GlobalRes.SOMCreateRporExport</option>
                            <option value="INCOUNTRYRETURN">@TnT.LangResource.GlobalRes.SOMCreateReturnInCountry</option>
                            <option value="EXPORTSALE">@TnT.LangResource.GlobalRes.SOMCreateSaleExpo</option>
                            <option value="INCOUNTRYSALE">@TnT.LangResource.GlobalRes.SOMCreateSaleInCountry</option>
                            <option value="EXPORTTRANSFER">@TnT.LangResource.GlobalRes.SOMCreateTransferExpo</option>
                            <option value="INCOUNTRYTRANSFER">@TnT.LangResource.GlobalRes.SOMCreateTransferInCountry</option>

                        </select>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsSerialized, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomIsSerialized, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.IsSerialized, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.IsSerialized, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SFLI_Country, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomCountry, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.SFLI_Country, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.SFLI_Country, (SelectList)ViewBag.Country_SFLI_Country, TnT.LangResource.GlobalRes.ProductDrpSelectCountry, new { @class = "form-control", @validate = "true" })
                        @Html.ValidationMessageFor(model => model.SFLI_Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ToBusinessPartyLookupId, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomBusinessLookUpId, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ToBusinessPartyLookupId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ToBusinessPartyLookupId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ShipToLocationLookupId, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipSomCountry, @data_original_title = "Field Information" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.SFLI_Country, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EditorFor(model => model.ShipToLocationLookupId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShipToLocationLookupId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSubmit" type="button" value="@TnT.LangResource.GlobalRes.cmnBtnSave" class="btn btn-info btn-default" />
            </div>
        </div>


    </div>

    @*<div class="form-horizontal">
       
     
        
         

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateOrRegion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StateOrRegion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StateOrRegion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacilityId_GLN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityId_GLN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityId_GLN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacilityId_SGLN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacilityId_SGLN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacilityId_SGLN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_BusinessName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_BusinessName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_Street1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_Street1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_Street1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_StateOrRegion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_StateOrRegion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_StateOrRegion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SFLI_Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SFLI_Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SFLI_Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

<script>
    $(document).ready(function () {
        
        var saleType="@Model.SalesDistributionType";
        $("#saleType").val(saleType);
        $("#btnSubmit").click(function () {
            var BusinessId = $("#BusinessId").val();
            var BusinessName = $("#BusinessName").val();
            var Street1 = $("#Street1").val();
            var City = $("#City").val();
            var StateOrRegion = $("#StateOrRegion").val();
            var PostalCode = $("#PostalCode").val();
            var Country = $("#Country").val();
            var FacilityId_GLN = $("#FacilityId_GLN").val();
            var FacilityId_SGLN = $("#FacilityId_SGLN").val();
            var SFLI_BusinessName = $("#SFLI_BusinessName").val();
            var SFLI_Street1 = $("#SFLI_Street1").val();
            var SFLI_City = $("#SFLI_City").val();
            var SFLI_StateOrRegion = $("#SFLI_StateOrRegion").val();
            var SFLI_PostalCode = $("#SFLI_PostalCode").val();
            var SFLI_Country = $("#SFLI_Country").val();
            var FromBusinessPartyLookupId = $("#FromBusinessPartyLookupId").val();
            var ShipFromLocationLookupId = $("#ShipFromLocationLookupId").val();
            var DeliveryNumber = $("#DeliveryNumber").val();
            var TransactionIdentifier = $("#TransactionIdentifier").val();
            var SalesDistributionType = $("#SalesDistributionType").val();
            var ToBusinessPartyLookupId = $("#ToBusinessPartyLookupId").val();
            var TransactionDate = $("#TransactionDate").val();
            var ShipToLocationLookupId = $("#ShipToLocationLookupId").val();

            var msgPOST = "";
            if (DeliveryNumber == "") {
                showMessage("DeliveryNumber", "@TnT.LangResource.GlobalRes.toastrSOMProvideDeliveryNumber");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMProvideDeliveryNumber";
            } else {
                clearColor("DeliveryNumber");
            }
            if (TransactionDate == "") {
                showMessage("TransactionDate", "@TnT.LangResource.GlobalRes.toastrSOMProvideTransactionDate");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMProvideTransactionDate";
            } else {
                clearColor("TransactionDate");
            }

            if (FromBusinessPartyLookupId == "") {
                showMessage("FromBusinessPartyLookupId", "@TnT.LangResource.GlobalRes.toastrSOMFromBusinessPartyLookupId");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMFromBusinessPartyLookupId";
            } else {
                clearColor("FromBusinessPartyLookupId");
            }
            if (ShipFromLocationLookupId == "") {
                showMessage("ShipFromLocationLookupId", "@TnT.LangResource.GlobalRes.toastrSOMShipFromLocationLookupId");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMShipFromLocationLookupId";
            } else {
                clearColor("ShipFromLocationLookupId");
            }
            if (TransactionIdentifier == "") {
                showMessage("TransactionIdentifier", "@TnT.LangResource.GlobalRes.toastrSOMTransactionIdentifier");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMTransactionIdentifier";
            } else {
                clearColor("TransactionIdentifier");
            }
            if (SalesDistributionType == "") {
                showMessage("SalesDistributionType", "@TnT.LangResource.GlobalRes.toastrSOMSalesDistributionType");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMSalesDistributionType";
            } else {
                clearColor("SalesDistributionType");
            }
            if (ToBusinessPartyLookupId == "") {
                showMessage("ToBusinessPartyLookupId", "@TnT.LangResource.GlobalRes.toastrSOMToBusinessPartyLookupId");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMToBusinessPartyLookupId";
            } else {
                clearColor("ToBusinessPartyLookupId");
            }


            //if (BusinessId == "") {
            //    showMessage("BusinessId", "Please Provide BusinessId");
            //    msgPOST += "Please Provide BusinessId";
            //} else {
            //    clearColor("BusinessId");
            //}

            if (BusinessName == "") {
                showMessage("BusinessName", "@TnT.LangResource.GlobalRes.toastrSOMProvideBusinessName");
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMProvideBusinessName";
            } else {
                clearColor("BusinessName");
            }

            //if (Street1 == "") {
            //    showMessage("Street1", "Please Provide Street");
            //    msgPOST += "Please Provide Street";
            //} else {
            //    clearColor("Street1");
            //}

            //if (City == "") {
            //    showMessage("City", "Please Provide City");
            //    msgPOST += "Please Provide City";
            //} else {
            //    clearColor("City");
            //}

            //if (StateOrRegion == "") {
            //    showMessage("StateOrRegion", "Please Provide StateOrRegion");
            //    msgPOST += "Please Provide StateOrRegion";
            //} else {
            //    clearColor("StateOrRegion");
            //}

            //if (PostalCode == "") {
            //    showMessage("PostalCode", "Please Provide PostalCode")
            //    msgPOST += "Please Provide PostalCode";
            //} else {
            //    clearColor("PostalCode");
            //}

            if (Country == "") {
                showMessage("Country", "@TnT.LangResource.GlobalRes.showMsgSenderCustomerCountry")
                msgPOST += "@TnT.LangResource.GlobalRes.showMsgSenderCustomerCountry";
            } else {
                clearColor("Country");
            }

            //if (FacilityId_GLN == "") {
            //    showMessage("FacilityId_GLN", "Please Provide GLN")
            //    msgPOST += "Please Provide GLN";
            //} else {
            //    clearColor("FacilityId_GLN");
            //}

            //if (FacilityId_SGLN == "") {
            //    showMessage("FacilityId_SGLN", "Please Provide GLN")
            //    msgPOST += "Please Provide GLN";
            //} else {
            //    clearColor("FacilityId_SGLN");
            //}

            //if (SFLI_BusinessName == "") {
            //    showMessage("SFLI_BusinessName", "Please Provide BusinessName")
            //    msgPOST += "Please Provide BusinessName";
            //} else {
            //    clearColor("SFLI_BusinessName");
            //}

            //if (SFLI_Street1 == "") {
            //    showMessage("SFLI_Street1", "Please Provide Street")
            //    msgPOST += "Please Provide Street";
            //} else {
            //    clearColor("SFLI_Street1");
            //}

            //if (SFLI_City == "") {
            //    showMessage("SFLI_City", "Please Provide City")
            //    msgPOST += "Please Provide City";
            //} else {
            //    clearColor("SFLI_City");
            //}

            //if (SFLI_StateOrRegion == "") {
            //    showMessage("SFLI_StateOrRegion", "Please Provide StateOrRegion")
            //    msgPOST += "Please Provide StateOrRegion";
            //} else {
            //    clearColor("SFLI_StateOrRegion");
            //}

            if (SFLI_Country == "") {
                showMessage("SFLI_Country", "@TnT.LangResource.GlobalRes.showMsgReceiverCustomerCountry")
                msgPOST += "@TnT.LangResource.GlobalRes.showMsgReceiverCustomerCountry";
            } else {
                clearColor("SFLI_Country");
            }

            //if (SFLI_PostalCode == "") {
            //    showMessage("SFLI_PostalCode", "Please Provide PostalCode")
            //    msgPOST += "Please Provide PostalCode";
            //} else {
            //    clearColor("PostalCode");
            //}
            if (ShipToLocationLookupId == "") {
                showMessage("ShipToLocationLookupId", "@TnT.LangResource.GlobalRes.toastrSOMCreateProvideLocationId")
                msgPOST += "@TnT.LangResource.GlobalRes.toastrSOMCreateProvideLocationId";
            } else {
                clearColor("ShipToLocationLookupId");
            }


            if (msgPOST == "") {
                formSubmit();
            }
        });

        $(".NumbersOnly").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        function showMessage(elementID, msg) {
            toastr.warning(msg);
            $("#" + elementID).val("");
            $("#" + elementID).css("border", "red 1px solid");
            return false;
        }
        function clearColor(elementID) {
            $("#" + elementID).css("border", "green 1px solid");
        }




    });
    $("#BusinessName").blur(function () {
        var value = $("#BusinessName").val();
        var letterNumber = /^[0-9a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {
            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidBusinessName");
            $("#BusinessName").val("");
            $("#BusinessName").css("border", "red 1px solid");
        }
        else {
            $("#BusinessName").css("border", "green 1px solid");
        }
    });

    $("#FromBusinessPartyLookupId").blur(function () {
        var value = $("#FromBusinessPartyLookupId").val();
        var letterNumber = /^[0-9a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidBusinessParty");
            $("#FromBusinessPartyLookupId").val("");
            $("#FromBusinessPartyLookupId").css("border", "red 1px solid");
        }
        else {
            $("#FromBusinessPartyLookupId").css("border", "green 1px solid");
        }
    });
    $("#ShipFromLocationLookupId").blur(function () {
        var value = $("#ShipFromLocationLookupId").val();
        var letterNumber = /^[0-9.a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidLocationLookupId");
            $("#ShipFromLocationLookupId").val("");
            $("#ShipFromLocationLookupId").css("border", "red 1px solid");
        }
        else {
            $("#ShipFromLocationLookupId").css("border", "green 1px solid");
        }
    });
    $("#DeliveryNumber").blur(function () {
        var value = $("#DeliveryNumber").val();
        var letterNumber = /^[0-9a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidDeliveryNumber");
            $("#DeliveryNumber").val("");
            $("#DeliveryNumber").css("border", "red 1px solid");
        }
        else {
            $("#DeliveryNumber").css("border", "green 1px solid");
        }
    });
    $("#TransactionIdentifier").blur(function () {
        var value = $("#TransactionIdentifier").val();
        var letterNumber = /^[0-9a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidTransactionIdentifier");
            $("#TransactionIdentifier").val("");
            $("#TransactionIdentifier").css("border", "red 1px solid");
        }
        else {
            $("#TransactionIdentifier").css("border", "green 1px solid");
        }
    });

    $("#SalesDistributionType").blur(function () {
        var value = $("#SalesDistributionType").val();
        var letterNumber = /^[0-9a-zA-Z\-\s]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidSalesDistribution");
            $("#SalesDistributionType").val("");
            $("#SalesDistributionType").css("border", "red 1px solid");
        }
        else {
            $("#SalesDistributionType").css("border", "green 1px solid");
        }
    });
    $("#ToBusinessPartyLookupId").blur(function () {
        var value = $("#ToBusinessPartyLookupId").val();
        var letterNumber = /^[0-9a-zA-Z]+$/;
        if (!value.match(letterNumber)) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrSOMInvalidBusinessParty");
            $("#ToBusinessPartyLookupId").val("");
            $("#ToBusinessPartyLookupId").css("border", "red 1px solid");
        }
        else {
            $("#ToBusinessPartyLookupId").css("border", "green 1px solid");
        }
    });
    function formSubmit() {
        document.getElementById("frmSOM").submit();
    }
</script>
