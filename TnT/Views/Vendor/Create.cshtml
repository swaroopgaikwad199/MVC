@model TnT.Models.Vendor.M_Vendor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/_Layout.cshtml";
}

<h2>Create LLC</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
           
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.ServiceKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceKey, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceKey, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-12" style="text-align: center;">
                <button type="submit" class="btn btn-info btn-icon icon-left">
                    Save
                    <i class="fa fa-save"></i>
                </button>
                <a  href='@Url.Action("Index","Vendor")' class="btn btn-danger btn-icon icon-left">
                    Back to List
                    <i class="fa fa-reply"></i>
                </a>
            </div>
        </div>
    </div>
}


<script type="text/javascript">
    $(document).ready(function () {

        if ('@Html.ValidationMessageFor(model => model.Address, "")' != '<span class="field-validation-valid" data-valmsg-for="Address" data-valmsg-replace="true"></span>') {
            toastr.warning('@Html.ValidationMessageFor(model => model.Address, "")');
        }

        if ('@Html.ValidationMessageFor(model => model.Email, "")' != '<span class="field-validation-valid" data-valmsg-for="Email" data-valmsg-replace="true"></span>') {
            toastr.warning('@Html.ValidationMessageFor(model => model.Email, "")');
        }

        if ('@Html.ValidationMessageFor(model => model.ContactNo, "")' != '<span class="field-validation-valid" data-valmsg-for="ContactNo" data-valmsg-replace="true"></span>') {
            toastr.warning('@Html.ValidationMessageFor(model => model.ContactNo, "")');
        }

        if ('@Html.ValidationMessageFor(model => model.ContactPerson, "")' != '<span class="field-validation-valid" data-valmsg-for="ContactPerson" data-valmsg-replace="true"></span>') {
            toastr.warning('@Html.ValidationMessageFor(model => model.ContactPerson, "")');
        }

        if ('@Html.ValidationMessageFor(model => model.CompanyName, "")' != '<span class="field-validation-valid" data-valmsg-for="CompanyName" data-valmsg-replace="true"></span>') {
            toastr.warning('@Html.ValidationMessageFor(model => model.CompanyName, "")');
        }





    });
    </script> 