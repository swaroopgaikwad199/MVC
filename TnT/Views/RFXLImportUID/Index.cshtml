@model TnT.Models.RFXLImport.RFXLImportViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Home/_Layout.cshtml";
}
<h2>@TnT.LangResource.GlobalRes.RFXLImportUidIndexImportuid</h2>
@using (Html.BeginForm("RFXLRequest", "RFXLImportUID", FormMethod.Post, new { @id = "frmRFXLRequest" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipTracelinkCustomer, @data_original_title = "Field Information" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomerId, new SelectList(ViewBag.Customer, "Id", "CompanyName"), TnT.LangResource.GlobalRes.LblLytSelect, new { @class = "form-control", @validate = "true" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })

                <div id="divInfo" style="display:none">
                    <br />

                    <div class="row">
                        <div class="col-lg-3">
                            <label>@TnT.LangResource.GlobalRes.M_VendorContactPerson : </label><label id="lblContPerson" class="Bold"> </label>
                        </div>
                        <div class="col-lg-3">
                            <label>@TnT.LangResource.GlobalRes.M_VendorContactNo : </label><label id="lblContNo" class="Bold"></label>
                        </div>
                        <div class="col-lg-3">
                            <label>@TnT.LangResource.GlobalRes.M_VendorEmail :</label><label id="lblContEmail" class="Bold"></label>
                        </div>
                        <div class="col-lg-3">
                            <label>@TnT.LangResource.GlobalRes.M_VendorAddress :</label><label id="lblAddress" class="Bold"></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <label>@TnT.LangResource.GlobalRes.M_VendorAPIURL : </label><label id="lblAPIUrl" class="Bold"> </label>
                        </div>
                        <div class="col-lg-6">
                            <label>@TnT.LangResource.GlobalRes.M_VendorProvider : </label><label id="lblProvider" class="Bold"></label>
                        </div>

                        @*<div class="col-lg-3">
                                <label>Address:</label><label id="lblAddress" class="Bold"></label>
                            </div>*@
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <label>@TnT.LangResource.GlobalRes.M_VendorProvidingSSCC  :</label><label id="lblSSCCAvailable" class="Bold"></label>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipTracelinkQuantity, @data_original_title = "Field Information" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control NumbersOnly", min = 0, max = 99999999 } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GTIN, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipTracelinkGTIN, @data_original_title = "Field Information" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GTIN, new { htmlAttributes = new { @class = "form-control NumbersOnly", maxlength = "14" } })
                @Html.ValidationMessageFor(model => model.GTIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="@TnT.LangResource.GlobalRes.ImporterTracelinkRequest" class="btn btn-info btn-default" id="BtnSubmit" />
            </div>
        </div>
    </div>

    <div>

    </div>

}




<script>
    $("#GTIN").blur(function () {

        var gtin = $("#GTIN").val();
        if (parseInt(gtin) < 14) {
            toastr.warning("@TnT.LangResource.GlobalRes.toastrtracelinkInvalidGTIN");
            $("#GTIN").css("border", "red 1px solid");
        }
        else {
            if (gtin != "")
                $("#GTIN").css("border", "green 1px solid");
        }
    });
    $(".NumbersOnly").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    $('#CustomerId').change(function () {


        CusId = $('#CustomerId').val();

        if (CusId == 0) {
            $('#divInfo').hide();
            return;
        }

        $.ajax({
            url: 'getCustomerData',
            type: "POST",
            dataType: 'json',
            data: { "CId": CusId },
            success: function (data) {

                if (data != null) {
                    $('#divInfo').show();
                    $('#lblContPerson').html(data.ContactPerson);
                    $('#lblContNo').html(data.ContactNo);
                    $('#lblContEmail').html(data.Email);
                    $('#lblAddress').html(data.Address);
                    if (data.IsSSCC == 'true') {
                        $('#lblSSCCAvailable').html("Yes");
                    } else {
                        $('#lblSSCCAvailable').html("No");
                    }

                    $('#lblProvider').html(data.Proivder.Name);
                    $('#lblAPIUrl').html(data.APIUrl);

                    //$('#').val();
                    //$('#').val();
                }
            },
            error: function (data) {

                toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

            }
        });
    });
    $("#BtnSubmit").click(function () {
        var CustomerId = $("#CustomerId").val();
        var Quantity = $("#Quantity").val();
        var GTIN = $("#GTIN").val();
        var msgPOST = "";
        if (CustomerId == "") {
            showMessage("CustomerId", "@TnT.LangResource.GlobalRes.toastrTracelinkCustomerId")
            msgPOST += "@TnT.LangResource.GlobalRes.toastrTracelinkCustomerId";
        } else {
            clearColor("CustomerId");
        }
        if (Quantity == "") {
            showMessage("Quantity", "@TnT.LangResource.GlobalRes.toastrTracelinkQuantity")
            msgPOST += "@TnT.LangResource.GlobalRes.toastrTracelinkQuantity";
        } else {
            clearColor("Quantity");
        }
        if (GTIN == "") {
            showMessage("GTIN", "@TnT.LangResource.GlobalRes.toastrTracelinkGTIN")
            msgPOST += "@TnT.LangResource.GlobalRes.toastrTracelinkGTIN";
        } else {
            clearColor("GTIN");
        }

        if (msgPOST == "") {
            formSubmit();
        }
    });
    function showMessage(elementID, msg) {
        toastr.warning(msg);
        $("#" + elementID).val("");
        $("#" + elementID).css("border", "red 1px solid");
        return false;
    }
    function clearColor(elementID) {
        $("#" + elementID).css("border", "green 1px solid");
    }
    function formSubmit() {
        document.getElementById("frmRFXLRequest").submit();
    }
</script>

