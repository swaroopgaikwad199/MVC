@model TnT.Models.Job.Job
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/_Layout.cshtml";
}

<h2>
    @TnT.LangResource.GlobalRes.JobsCreate
    <a style="float:right; margin-right:5px;" href='@Url.Action("Index", "Jobs")' class="btn btn-danger btn-icon icon-left">
        @TnT.LangResource.GlobalRes.cmnBtnBackToList
        <i class="fa fa-reply"></i>
    </a>
</h2>

<div>

    @{
    var duallabel = Convert.ToBoolean(Utilities.getAppSettings("DualLabel"));

    }

    @if (!ViewData.ModelState.IsValid)
    {

    <div class="text-danger bold">@TnT.LangResource.GlobalRes.CustomerCreateDivValidation</div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>

<div style="border: 4px solid #636161; border-radius: 9px; ">
    @using (Html.BeginForm("Create", "Jobs", FormMethod.Post, new { @class = "f1", @id = "frmJob" }))
    {
    <div class="f1-steps">
        <div class="f1-progress">
            <div class="f1-progress-line" data-now-value="17" data-number-of-steps="5" style="width: 17%;"></div>
        </div>
        <div class="f1-step active">
            <div class="f1-step-icon">1</div>
            <p>@TnT.LangResource.GlobalRes.cmnWizardProductInfo</p>
        </div>
        <div class="f1-step">
            <div class="f1-step-icon">2</div>
            <p>@TnT.LangResource.GlobalRes.cmnWizardAggregationInfo</p>
        </div>
        <div class="f1-step">
            <div class="f1-step-icon">3</div>
            <p>@TnT.LangResource.GlobalRes.cmnWizardBatchSettings</p>
        </div>
        <div class="f1-step">
            <div class="f1-step-icon">4</div>
            <p>@TnT.LangResource.GlobalRes.cmnWizardSaveBatch</p>
        </div>
        <div class="f1-step">
            <div class="f1-step-icon">5</div>
            <p>@TnT.LangResource.GlobalRes.cmnWizardVerification</p>
        </div>
    </div>
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <fieldset>
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.TID, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipProductType, @data_original_title = "Field Information" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.TID, new SelectList(ViewBag.Types, "TID", "Job_Type"), TnT.LangResource.GlobalRes.JobCreateDrpType, new { @class = "form-control", @validate = "true" ,@id= "TID" })

                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PAID, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipProductFGCode, @data_original_title = "Field Information" })
                        <div class="col-md-8">
                            @*@Html.DropDownListFor(model => model.PAID, new SelectList(ViewBag.FPCodes, "PAID", "FGCode"), "Select Code", new { @onchange = "Action(this.value);", @class = "form-control required", @validate = "true", @id = "ddProd" })*@
                            <select class="form-control required" data-val="true" data-val-number="The field FP Code must be a number." data-val-required="The FP Code field is required." id="ddProd" name="PAID" onchange="Action(this.value);" validate="true">
                                <option value="0">@TnT.LangResource.GlobalRes.JobCreateDrpCode</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.PAID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.JobName, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPONumber, @data_original_title = "Field Information" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.JobName, new { htmlAttributes = new { @class = "form-control", @validate = "true", @maxlength = "20" } })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label(@TnT.LangResource.GlobalRes.JobsProductCode, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.TooTipBatchProductCode, @data_original_title = "Field Information" })

                        <div class="col-md-8">
                            @Html.TextBox("txtProductCode", null, new { @class = "form-control", @disabled = "true" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.Label(@TnT.LangResource.GlobalRes.JobsProductName, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchProductName, @data_original_title = "Field Information" })

                        <div class="col-md-8">
                            @Html.TextBox("txtProductName", null, new { @class = "form-control", @disabled = "true" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchCustomerId, @data_original_title = "Field Information" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.CustomerId, new SelectList(ViewBag.Customer, "Id", "CompanyName"), TnT.LangResource.GlobalRes.LblLytSelect, new { @class = "form-control", @validate = "true" })
                            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
            </div>
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PackagingLvlId, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPackagingLvl, @data_original_title = "Field Information" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.PackagingLvlId, new SelectList(ViewBag.PackLvls, "Id", "Level"), TnT.LangResource.GlobalRes.LblLytSelect, new { @class = "form-control", @validate = "true" })
                            @Html.ValidationMessageFor(model => model.PackagingLvlId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @*<label class="control-label col-md-4" for="Provider">@TnT.LangResource.GlobalRes.JobsUIDProvider</label>*@
                        @Html.Label(@TnT.LangResource.GlobalRes.JobsUIDProvider, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchUIDProvider, @data_original_title = "Field Information" })
                        <div class="col-md-8" style="padding-top: 7px;">
                            <span id="ProviderNameLbl">-</span>
                        </div>
                    </div>

                </div>
            </div>


            @*</div>*@

    <div class="row">
        <div class="col-md-6">
            <div class="form-group NHRN">
                <label class="control-label col-md-4 popover-default" data-content="@TnT.LangResource.GlobalRes.JobCreateSelectTradeNoType" data-original-title="Field Information" data-placement="top" data-toggle="popover" data-trigger="hover" for="Type">@TnT.LangResource.GlobalRes.JobCreateTradeNoType</label>
                <div class="col-md-6">
                    <select name="CompType" id="CompType" class="form-control">
                        <option value="GTIN">@TnT.LangResource.GlobalRes.JobsGTIN</option>
                        <option value="NTIN">@TnT.LangResource.GlobalRes.ImporterTacelinkNTIN</option>
                    </select>

                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label(@TnT.LangResource.GlobalRes.JobCreateUseMfg, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchCustomerId, @data_original_title = "Field Information" })
                <div class="col-md-2">
                    <input type="checkbox" id="Usemfg" />

                </div>
                <div class="form-group NHRN">
                    @Html.Label(@TnT.LangResource.GlobalRes.JobCreateUseNHRN, htmlAttributes: new { @class = "control-label col-md-3 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchCustomerId, @data_original_title = "Field Information" })
                    <div class="col-md-3">
                        <input type="checkbox" id="Usenhrn" />

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6" id="divPPNCodes">
        <div class="form-group">
            @Html.LabelFor(model => model.PPNCountryCode, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPPNCountry, @data_original_title = "Field Information" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PPNCountryCode, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.PPNCountryCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PPNPostalCode, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPPNPostal, @data_original_title = "Field Information" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PPNPostalCode, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.PPNPostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <input type="hidden" name="ProviderId" id="ProviderId" value="" />

    <div class="f1-buttons">
        <button type="button" class="btn btn-next btn-orange" id="btnNxtFirst">@TnT.LangResource.GlobalRes.cmnWizardBtnNext</button>
    </div>
    </fieldset>
    <fieldset id="fieldLEVLS">
        <div class="col-sm-12">

            <table width="90%" id="packagingGrid" style="text-align: center; margin-top: 5px; margin-bottom: 8px;" class="table">
                <thead>
                    <tr>
                        <th style="width: 10%;"></th>
                        <th class="PPB" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobPPB</th>
                        <th class="MOC" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobMOC</th>
                        <th class="OBX" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobOBX</th>
                        <th class="ISH" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobISH</th>
                        <th class="OSH" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobOSH</th>
                        <th class="PAL" style="width: 10%; text-align: center;">@TnT.LangResource.GlobalRes.JobCloseJobPAL</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="trPPN">
                        <th>@TnT.LangResource.GlobalRes.ProductPPN</th>
                        <td class="PPB"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="PPB[]" /></td>
                        <td class="MOC"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="MOC[]" /></td>
                        <td class="OBX"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input maxlength="14" readonly class="form-control NumbersOnly" type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsGTIN</th>
                        <td class="PPB"><input class="form-control" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.ImporterTacelinkNTIN</th>
                        <td class="PPB"><input class="form-control" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsMRP</th>
                        <td class="PPB"><input class="form-control" type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsPCMAP</th>
                        <td class="PPB"><input class="form-control" maxlength="4" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" maxlength="4" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" maxlength="4" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" maxlength="4" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" maxlength="4" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" maxlength="4" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsBundlingQTY</th>
                        <td class="PPB"><input class="form-control" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsBatchQty</th>
                        <td class="PPB"><input class="form-control" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@TnT.LangResource.GlobalRes.JobsUIDstoPrint</th>
                        <td class="PPB"><input class="form-control" readonly type="text" name="PPB[]" /></td>
                        <td class="MOC"><input class="form-control" readonly type="text" name="MOC[]" /></td>
                        <td class="OBX"><input class="form-control" readonly type="text" name="OBX[]" /> </td>
                        <td class="ISH"><input class="form-control" readonly type="text" name="ISH[]" /> </td>
                        <td class="OSH"><input class="form-control" readonly type="text" name="OSH[]" /> </td>
                        <td class="PAL"><input class="form-control" readonly type="text" name="PAL[]" /> </td>
                    </tr>
                    <tr>
                        <th>@Html.Label(@TnT.LangResource.GlobalRes.ProductLabelName, htmlAttributes: new { @class = "control-label  popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipProductLabelName, @data_original_title = "Field Information" })</th>

                        <td class="PPB">
                            @*<input class="form-control" type="text" name="PPB[]" />*@
                            <select class="form-control required" data-val-required="The Label field is required." id="ddPPBLable" name="PPB[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel </option>
                            </select>
                            <br />
                            @*<a href="#" onclick="loadPreview('PPB');">Preview</a>*@
                        </td>
                        <td class="MOC">
                            @*<input class="form-control" type="text" name="MOC[]" />*@
                            <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddMOCLable" name="MOC[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                            </select>
                            <br />
                            <a href="#" onclick="loadPreview('MOC');" style="display:none">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>&nbsp;&nbsp;
                            @if (duallabel)
                            {
                            <div id="PartialLable">
                                <br />

                                <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPartialMOCLable" name="PartialMOC[]">
                                    <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                                </select>
                                <br />
                                <a href="#" onclick="loadPreview('PartialMOC');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            </div>
                            }
                        </td>
                        <td class="OBX">
                            @*<input class="form-control" type="text" name="OBX[]" />*@
                            <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddOBXLable" name="OBX[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                            </select>
                            <br />
                            <a href="#" onclick="loadPreview('OBX');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            @if (duallabel)
                            {
                            <div id="PartialLable">
                                <br />
                                <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPartialOBXLable" name="PartialOBX[]">
                                    <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                                </select>
                                <br />
                                <a href="#" onclick="loadPreview('PartialOBX');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            </div>
                            }
                        </td>
                        <td class="ISH">
                            @*<input class="form-control" type="text" name="ISH[]" />*@
                            <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddISHLable" name="ISH[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                            </select>
                            <br />
                            <a href="#" onclick="loadPreview('ISH');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            @if (duallabel)
                            {
                            <div id="PartialLable">
                                <br />
                                <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPartialISHLable" name="PartialISH[]">
                                    <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                                </select>
                                <br />
                                <a href="#" onclick="loadPreview('PartialISH');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            </div>
                            }
                        </td>
                        <td class="OSH">
                            @*<input class="form-control" type="text" name="OSH[]" />*@
                            <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddOSHLable" name="OSH[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                            </select>
                            <br />
                            <a href="#" onclick="loadPreview('OSH');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            @if (duallabel)
                            {
                            <div id="PartialLable">
                                <br />
                                <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPartialOSHLable" name="PartialOSH[]">
                                    <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                                </select>
                                <br />
                                <a href="#" onclick="loadPreview('PartialOSH');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            </div>
                            }
                        </td>
                        <td class="PAL">
                            @*<input class="form-control" type="text" name="PAL[]" />*@
                            <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPALLable" name="PAL[]">
                                <option value="">@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>
                            </select>
                            <br />
                            <a href="#" onclick="loadPreview('PAL');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            @if (duallabel)
                            {
                            <div id="PartialLable">
                                <br />
                                <select class="form-control required" data-val="true" data-val-required="The Label field is required." id="ddPartialPALLable" name="PartialPAL[]">
                                    <option value="">Select Partial Label</option>
                                </select>
                                <br />
                                <a href="#" onclick="loadPreview('PartialPAL');">@TnT.LangResource.GlobalRes.cmnBtnPreview</a>
                            </div>
                            }
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.Label(@TnT.LangResource.GlobalRes.ProductLabelFilter, htmlAttributes: new { @class = "control-label  popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipProductLabelFilter, @data_original_title = "Field Information" })</th>

                        <td class="PPB"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="PPB[]" id="lblPPB" /></td>
                        <td class="MOC"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="MOC[]" id="lblMOC" /></td>
                        <td class="OBX"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="OBX[]" id="lblOBX" /> </td>
                        <td class="ISH"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="ISH[]" id="lblISH" /> </td>
                        <td class="OSH"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="OSH[]" id="lblOSH" /> </td>
                        <td class="PAL"><input class="form-control" value="GS12D1-01-17-10-21|GTIN|EXP|LOT|UID" type="text" name="PAL[]" id="lblPAL" /> </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <hr />

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchQty, @data_original_title = "Field Information" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control NumbersOnly", @id = "AgQty", @min = "0", @value = "0", @maxlength = "1000000" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.SurPlusQty, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchSurplusUID, @data_original_title = "Field Information" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SurPlusQty, new { htmlAttributes = new { @class = "form-control NumbersOnly", @min = "0", @id = "txtSurPlus", @value = "0" } })
                        @Html.ValidationMessageFor(model => model.SurPlusQty, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="f1-buttons">
            <button type="button" class="btn btn-previous">@TnT.LangResource.GlobalRes.cmnWizardBtnPrevious</button>
            <button type="button" class="btn btn-next btn-orange" id="BtnNxtAgg">@TnT.LangResource.GlobalRes.cmnWizardBtnNext</button>
        </div>


    </fieldset>
    <fieldset>

        <div class="form-group">
            <div class="">
                @Html.LabelFor(model => model.LineCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchProductLine, @data_original_title = "Field Information" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.LineCode, new SelectList(ViewBag.LineCode, "ID", "ID"), TnT.LangResource.GlobalRes.RptJobFilterSelectLine, new { @class = "form-control", @validate = "true" })
                    @Html.ValidationMessageFor(model => model.LineCode, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.PrimaryPCMapCount, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPrimaryPCMAP, @data_original_title = "Field Information" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PrimaryPCMapCount, new { htmlAttributes = new { @Value = "1", @class = "form-control NumbersOnly", @validate = "true" } })
                    @Html.ValidationMessageFor(model => model.PrimaryPCMapCount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="">
                @Html.LabelFor(model => model.BatchNo, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchNo, @data_original_title = "Field Information", @maxlength = "20" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.BatchNo, new { htmlAttributes = new { @class = "form-control", @validate = "true", @maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.BatchNo, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.ExpDateFormat, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchExpDateformat, @data_original_title = "Field Information" })
                <div class="col-md-4">
                    @Html.DropDownListFor(M => M.ExpDateFormat, new SelectList(ViewBag.DateFormats, "Format", "Format"), TnT.LangResource.GlobalRes.JobCreateDrpFormat, new { @class = "form-control", @validate = "true" })
                    @*  @Html.EditorFor(model => model.ExpDateFormat, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ExpDateFormat, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="col-md-6">
            <div class="form-group">

                <div class="">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.UseExpDay, htmlAttributes: new { @class = "control-label col-md-5 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipProductUseExpDay, @data_original_title = "Field Information" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.UseExpDay)
                            @Html.ValidationMessageFor(model => model.UseExpDay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.JobWithUID, htmlAttributes: new { @class = "control-label col-md-5 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchPrintwithUID, @data_original_title = "Field Information" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.JobWithUID, new { @checked = "checked" })
                            @Html.ValidationMessageFor(model => model.JobWithUID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ForExport, htmlAttributes: new { @class = "control-label col-md-5 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchForExport, @data_original_title = "Field Information" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.ForExport, new { @checked = "checked" })
                            @Html.ValidationMessageFor(model => model.ForExport, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.AutomaticBatchCloser, htmlAttributes: new { @class = "control-label col-md-5 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipBatchAutomaticBatchClosure, @data_original_title = "Field Information", @style = "margin-right: 20px;" })
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AutomaticBatchCloser, new { @checked = "checked" })
                                @Html.ValidationMessageFor(model => model.AutomaticBatchCloser, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.Label(@TnT.LangResource.GlobalRes.JobsAutoDate, htmlAttributes: new { @class = "control-label col-md-5 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = @TnT.LangResource.GlobalRes.ToolTipBatchAutoDate, @data_original_title = "Field Information", @style = "margin-right: 20px;", @for = "autoDate" })
                        @*<label for="autoDate" class="control-label col-md-5">@TnT.LangResource.GlobalRes.JobsAutoDate</label>*@
                        <div class="col-md-4">
                            <input class="check-box" id="autoDate" name="autoDate" type="checkbox">
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <div class="form-group">
                        @*<label class="control-label col-md-5" for="MfgDate">Mfg Date</label>*@
                        @Html.LabelFor(model => model.MfgDate, htmlAttributes: new { @class = "control-label col-md-4 popover-default" }) })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.MfgDate, new { htmlAttributes = new { @class = "form-control datepicker", @style = "width: 150%;", validate = "true", @name = "MFrom" } })
                            @Html.ValidationMessageFor(model => model.MfgDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ExpDate, htmlAttributes: new { @class = "control-label col-md-4 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = @TnT.LangResource.GlobalRes.ToolTipBatchExpiryDate, @data_original_title = "Field Information", @style = "text-align:center; padding-right:37px" })*@
                        @*<label class="control-label col-md-5" for="MfgDate">Exp Date</label>*@
                        @Html.LabelFor(model => model.ExpDate, htmlAttributes: new { @class = "control-label col-md-4 popover-default" }) })

                        <div class="col-md-5">
                            @Html.EditorFor(model => model.ExpDate, new { htmlAttributes = new { @class = "form-control datepicker", @style = "width: 150%;", @validate = "true", @name = "EFrom" } })
                            @Html.ValidationMessageFor(model => model.ExpDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="f1-buttons">
            <button type="button" class="btn btn-previous" id="btnAggPre">@TnT.LangResource.GlobalRes.cmnWizardBtnPrevious</button>
            <button type="button" class="btn btn-next btn-orange" id="btnJobSettingNxt">@TnT.LangResource.GlobalRes.cmnWizardBtnNext</button>
        </div>

    </fieldset>
    <fieldset>

        <div class="row">
            <div class="form-group">
                <div class="col-md-12" style="text-align: center;margin-top: 6%;margin-bottom: 6%;">
                    <button type="button" id="btnSubmit" class="btn btn-lg btn-info btn-icon icon-left">
                        @TnT.LangResource.GlobalRes.cmnBtnSave
                        <i class="fa fa-save"></i>
                    </button>

                </div>
            </div>
        </div>
        <div class="f1-buttons">
            <button type="button" id="btnLastPre" class="btn btn-previous">@TnT.LangResource.GlobalRes.cmnWizardBtnPrevious</button>
            @*<button type="button" class="btn btn-next btn-orange">Next</button>*@
        </div>
    </fieldset>
    <fieldset>
        <div class="row">
            <h2>@TnT.LangResource.GlobalRes.JobCreateVerifySection</h2>
        </div>
        <div class="f1-buttons">
            <button type="button" class="btn btn-previous">@TnT.LangResource.GlobalRes.cmnWizardBtnPrevious</button>
            <button type="submit" class="btn btn-submit">@TnT.LangResource.GlobalRes.btnJobCreateSubmit</button>
        </div>
    </fieldset>
</div>
<div class="modal fade" id="modal-lablePreview" style="width:auto;height:auto;">
    <div style="display:none;" id="loadTemData"></div>
    <div class="modal-dialog previewBody" style="width:auto;height:auto;">
        <div class="modal-content">
            <button type="button" class="close" style="float:right;" data-dismiss="modal" aria-hidden="true">&times;</button>
            <div class="modal-body previewBody" id="previewModelBody" style="width:auto;height:auto;">
                <img src="" alt="" class="lblImage" />
            </div>

        </div>
    </div>
</div>
<button style="display:none;" id="showPrvwBx" class="myBtn" type="button" data-toggle="modal" data-target="#modal-lablePreview">test </button>
    }
</div>
<script type="text/javascript">

    var compType = "";
    var Level = "";
    $(document).ready(function () {
        $(".NumbersOnly").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        $("#MfgDate").datepicker({ format: "dd/mm/yyyy", autoclose: true }).on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $('#ExpDate').datepicker('setStartDate', startDate);
        });

        $('#ExpDate').datepicker({ format: "dd/mm/yyyy", autoclose: true }).on('changeDate', function (selected) {
            FromEndDate = new Date(selected.date.valueOf());
            FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
            $("#MfgDate").datepicker('setEndDate', FromEndDate);
        });


        initdates();

        function updateAggrigationLevelsOnLoad() {
            AgQtyChange();
            surPlusChange();
        }
        $('#AgQty').val(0);
        $('#txtSurPlus').val(0);

        var ddVal = $('#ddProd').val();
        if (ddVal != "") {
            Action(ddVal);
        }
        $('#AgQty').focus();


    });
    var aggrigatonLevels;

    function initdates() {

        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

        var lastDayWithSlashes = (lastDay.getDate()) + '/' + (lastDay.getMonth() + 1) + '/' + (lastDay.getFullYear() + 1);
        var firstDayWithSlashes = (firstDay.getDate()) + '/' + (firstDay.getMonth() + 1) + '/' + firstDay.getFullYear();

        $('#MfgDate').prop("disabled", false);
        $('#ExpDate').prop("disabled", false);
        $('#MfgDate').datepicker('update', firstDayWithSlashes);
        $('#ExpDate').datepicker('update', lastDayWithSlashes);

        $('#MfgDate').datepicker('setEndDate', lastDayWithSlashes);
        $('#ExpDate').datepicker('setStartDate', firstDayWithSlashes);

    }
    $("#CustomerId").change(function () {
        var customerID = $("#CustomerId").val();
        var type = $("#TID option:selected").text();
        $.ajax({
            url: '@Url.Action("getClientData", "Jobs")',
    type: "POST",
    dataType: 'json',
    data: { "Id": customerID },
    success: function (data) {
        $("#ProviderNameLbl").html(data.Name);
        $("#ProviderId").val(data.Id);
        if (type != "SOUTH KOREA") {
            $("#AgQty").val(0);
        }
        $("#txtSurPlus").val(0);

        var provider = $("#ProviderId").val();
        var jobtype = $("#TID").val();
        if (jobtype == 26 || jobtype == 20058) {
            if (provider != 4) {
                toastr.warning("For " + $("#TID option:selected").text() + "  @TnT.LangResource.GlobalRes.toastrJobCreateUIDNotGenerated " + data.Name + " @TnT.LangResource.GlobalRes.M_VendorProvider");
    $("#btnNxtFirst").attr("disabled", "disabled");
}
else {
    $("#btnNxtFirst").removeAttr("disabled");
}
}
else {
$("#btnNxtFirst").removeAttr("disabled");
}
},
error: function (data) {

toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});


});
function Action(PAID) {

var IsNHRN;
if ($("#Usenhrn").is(':checked')) {
IsNHRN = true;
}
else {
IsNHRN = false;
}

$("select#PackagingLvlId").val("");

if (PAID > 0) {

var jobTypeId = $('#TID').val();

$.ajax({
        url: '@Url.Action("getProductData", "Jobs")',
    type: "POST",
    dataType: 'json',
    data: { "PAID": PAID, "jobTypeId": jobTypeId, "ISNHNR": IsNHRN },
    success: function (data) {


        if ($.type(data) == "string") {
            debugger;
            var result = data.replace("CountryDrugCode", "National Drug Code");

            // if (data.includes("CountryDrugCode"))
            //    if (data.includes("CountryDrugCode"))
            //{

            //    data = "National Drug Code";
            //}
            
            $('#modal-msg').html('@TnT.LangResource.GlobalRes.ShwMsgJobCreateInsuffData : <br />' + result);
    $("#showMSGBx").trigger("click");
    if (jobTypeId == 20060) {
        toastr.warning("@TnT.LangResource.GlobalRes.ShwMsgJobCreateTickNHRN");
    $("#ddProd").val("");
}
}

if (data != null) {
debugger;
hideLevels();
var vdata = data;
var i;
var pa;
$("#txtProductName").val(vdata[0].Name);
$("#txtProductCode").val(vdata[0].ProductCode);
compType = vdata[0].CompType;
Level = vdata[1];
aggrigatonLevels = Level;
var packAssoData = vdata[2];

for (i = 0; i < Level.length; i++) {
    var packAssoDetails = vdata[2][i];

    $('input[name="' + Level[i] + '[]"]').eq(0).val(packAssoDetails.PPN);
    $('input[name="' + Level[i] + '[]"]').eq(1).val(packAssoDetails.GTIN);
    $('input[name="' + Level[i] + '[]"]').eq(2).val(packAssoDetails.NTIN);
    $('input[name="' + Level[i] + '[]"]').eq(3).val(packAssoDetails.MRP);
    $('input[name="' + Level[i] + '[]"]').eq(4).val(packAssoDetails.Size);
    $('input[name="' + Level[i] + '[]"]').eq(5).val(packAssoDetails.BundleQty);
    $('.' + Level[i]).show();

    $('input[name="' + Level[i] + '[]"]').eq(6).val(0);
    $('input[name="' + Level[i] + '[]"]').eq(7).val(0);

    $("#autoDate").attr('checked', 'checked');
    $("#autoDate").trigger("click");
    $("#JobWithUID").attr('checked', 'checked');
    $("#ForExport").attr('checked', 'checked');
    $("#AutomaticBatchCloser").attr('checked', 'checked');
}

if ($('input[name="PPB[]"]').eq(1).val() == "") {
    $('input[name="PPB[]"]').eq(8).val("");
}

if ($('input[name="MOC[]"]').eq(1).val() == "") {
    $('input[name="MOC[]"]').eq(8).val("");
}

if ($('input[name="OBX[]"]').eq(1).val() == "") {
    $('input[name="OBX[]"]').eq(8).val("");
}

if ($('input[name="ISH[]"]').eq(1).val() == "") {
    $('input[name="ISH[]"]').eq(8).val("");
}
if ($('input[name="OSH[]"]').eq(1).val() == "") {
    $('input[name="OSH[]"]').eq(8).val("");
}

if ($('input[name="PAL[]"]').eq(1).val() == "") {
    $('input[name="PAL[]"]').eq(8).val("");
}



}
},

error: function (data) {

toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}

});


}


}

$("#PackagingLvlId").change(function () {
var type = $("#TID option:selected").text();
var selectedLvl = $("#PackagingLvlId option:selected").text();
var lvlArr = selectedLvl.split("-");

allLevels = ["PPB", "MOC", "OBX", "ISH", "OSH", "PAL"];
filteredArray = lvlArr.filter(function (el) {
return allLevels.includes(el);
});


var is_same = (Level.length == filteredArray.length) && Level.every(function (element, index) {
return element === filteredArray[index];
});

if (is_same == false) {
$('#modal-msg').html('@TnT.LangResource.GlobalRes.JobCreateMsgSelectedpackaging');
    $("#showMSGBx").trigger("click");
    $("#btnNxtFirst").attr("disabled", "disabled");
    $("#PackagingLvlId").val('');
} else if (is_same == true) {
    $("#btnNxtFirst").removeAttr("disabled");
}
if (type != "SOUTH KOREA") {
    $("#AgQty").val(0);


    $("#AgQty").css("border", "#ebebeb 1px solid");
    $("#AgQty").trigger("change");
}

//console.log(lvlArr);
//console.log(Level);
});

$("#AgQty").change(function () {

if ($("#AgQty").val() <= 0) {
    toastr.warning("@TnT.LangResource.GlobalRes.toastrScriptInvalidBatchQuantity");
    $("#AgQty").css("border", "red 1px solid");
    $("#BtnNxtAgg").attr("disabled", "disabled");

} else {
    $("#AgQty").css("border", "1px solid green");
    $("#BtnNxtAgg").removeAttr("disabled");
}
var initialPCMap = aggrigatonLevels[0];
var currentBatchQty = $("#AgQty").val();
if (currentBatchQty > 1000000) {

    toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobBatchQuantity");
    $("#AgQty").val("");
    $("#AgQty").css("border", "red 1px solid");
    return false;
}

if (currentBatchQty != "") {
    $('input[name="' + initialPCMap + '[]"]').eq(6).val(currentBatchQty);
    $('input[name="' + initialPCMap + '[]"]').eq(7).val(currentBatchQty);
}
else {
    $('input[name="' + initialPCMap + '[]"]').eq(6).val(0);
    $('input[name="' + initialPCMap + '[]"]').eq(7).val(0);
}

var firstMap = $('input[name="' + aggrigatonLevels[1] + '[]"]').eq(4).val();
var counter = 1;
for (k = 1; k < aggrigatonLevels.length; k++) {
    var PCM = $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(4).val();

    var cnt = parseInt($('input[name="' + aggrigatonLevels[k - 1] + '[]"]').eq(6).val()) / parseInt(PCM);
    cnt = Math.ceil(cnt);



    if (cnt == 0) {
        cnt = 1;
    }


    if (currentBatchQty != 0) {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(cnt);
    }
    else {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(0);
    }


    if ($("#txtSurPlus").val() != 0 || $("#txtSurPlus").val() != "") {

        if (counter == 1) {
            var olCount = $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val();
            var newCnt = parseInt(olCount) + parseInt($("#txtSurPlus").val());

            $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val(newCnt);

        }
    }

    counter++;
    var cntj = parseInt($('input[name="' + aggrigatonLevels[k - 1] + '[]"]').eq(7).val()) / parseInt(PCM);
    cntj = Math.ceil(cntj);



    if (cntj == 0) {
        cntj = 1;
    }
    //alert(cntj);
    if (currentBatchQty != 0) {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(7).val(cntj);
    }
    else {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(7).val(0);
    }
    if (counter == aggrigatonLevels.length) {
        counter = 0;
    }
    var agQtyVal = $("#AgQty").val();
    var surPlusVal = $("#txtSurPlus").val();
    if (parseInt(surPlusVal) > parseInt(agQtyVal)) {
        toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobSurplusUID");
    $("#txtSurPlus").val(agQtyVal);
}
$("#txtSurPlus").attr("max", parseInt($("#AgQty").val()));
}

});

$("#txtSurPlus").change(function () {

var iniQty = $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(6).val();
var newQty = parseInt(iniQty) + parseInt($("#txtSurPlus").val());
if (isNaN(newQty)) {
var newQty = iniQty;
}
$('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val(newQty);

for (ks = 1; ks < aggrigatonLevels.length; ks++) {
var PCMs = $('input[name="' + aggrigatonLevels[ks] + '[]"]').eq(4).val();
var cntj = parseInt($('input[name="' + aggrigatonLevels[ks - 1] + '[]"]').eq(7).val()) / parseInt(PCMs);
cntj = Math.ceil(cntj);



if (cntj == 0) {
    cntj = 1;
}
//alert(cntj);
$('input[name="' + aggrigatonLevels[ks] + '[]"]').eq(7).val(cntj);
}
});
$("#txtSurPlus").keyup(function () {
var agQtyVal = $("#AgQty").val();
var surPlusVal = $("#txtSurPlus").val();
if (parseInt(surPlusVal) > parseInt(agQtyVal)) {
toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobSurplusUID");
    $("#txtSurPlus").val(agQtyVal);
}
});
function hideLevels() {
$(".PPB").hide();
$(".MOC").hide();
$(".OBX").hide();
$(".ISH").hide();
$(".OSH").hide();
$(".PAL").hide();

$('input[name="PPB[]"]').eq(1).val("");
$('input[name="MOC[]"]').eq(1).val("");
$('input[name="OBX[]"]').eq(1).val("");
$('input[name="ISH[]"]').eq(1).val("");
$('input[name="OSH[]"]').eq(1).val("");
$('input[name="PAL[]"]').eq(1).val("");

$('input[name="PPB[]"]').eq(2).val("");
$('input[name="MOC[]"]').eq(2).val("");
$('input[name="OBX[]"]').eq(2).val("");
$('input[name="ISH[]"]').eq(2).val("");
$('input[name="OSH[]"]').eq(2).val("");
$('input[name="PAL[]"]').eq(2).val("");

$('input[name="PPB[]"]').eq(7).val("");
$('input[name="MOC[]"]').eq(7).val("");
$('input[name="OBX[]"]').eq(7).val("");
$('input[name="ISH[]"]').eq(7).val("");
$('input[name="OSH[]"]').eq(7).val("");
$('input[name="PAL[]"]').eq(7).val("");
}

function AgQtyChange() {

var initialPCMap = aggrigatonLevels[0];
var currentBatchQty = $("#AgQty").val();
if (currentBatchQty > 1000000) {
    toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobBatchQuantity");
    $("#AgQty").val("");
    $("#AgQty").css("border", "red 1px solid");
    return false;
}
$('input[name="' + initialPCMap + '[]"]').eq(6).val(currentBatchQty);
$('input[name="' + initialPCMap + '[]"]').eq(7).val(currentBatchQty);

var firstMap = $('input[name="' + aggrigatonLevels[1] + '[]"]').eq(4).val();
var counter = 1;
for (k = 1; k < aggrigatonLevels.length; k++) {
    var PCM = $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(4).val();
    var cnt = parseInt($('input[name="' + aggrigatonLevels[k - 1] + '[]"]').eq(6).val()) / parseInt(PCM);
    cnt = Math.ceil(cnt);
    if (cnt == 0) {
        cnt = 1;
    }
    if (currentBatchQty != 0) {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(cnt);
    }
    else {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(0);
    }


    if ($("#txtSurPlus").val() != 0 || $("#txtSurPlus").val() != "") {

        if (counter == 1) {
            var olCount = $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val();
            var newCnt = parseInt(olCount) + parseInt($("#txtSurPlus").val());

            $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val(newCnt);
        }
    }

    counter++;
    $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(7).val(cnt);
    if (counter == aggrigatonLevels.length) {
        counter = 0;
    }

    $("#txtSurPlus").attr("max", parseInt($("#AgQty").val()));
}

}

function surPlusChange() {

var iniQty = $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(6).val();
var newQty = parseInt(iniQty) + parseInt($("#txtSurPlus").val());

$('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val(newQty);
}

$("#autoDate").change(function () {
var date = new Date();
var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

var lastDayWithSlashes = (lastDay.getDate()) + '/' + (lastDay.getMonth() + 1) + '/' + (lastDay.getFullYear() + 1);
var firstDayWithSlashes = (firstDay.getDate()) + '/' + (firstDay.getMonth() + 1) + '/' + firstDay.getFullYear();

if ($(this).is(':checked')) {


    $('#MfgDate').datepicker('update', firstDayWithSlashes);
    $('#ExpDate').datepicker('update', lastDayWithSlashes);
    $('#MfgDate').attr("disabled", true);
    $('#ExpDate').attr("disabled", true);
} else {


    $('#MfgDate').prop("disabled", false);
    $('#ExpDate').prop("disabled", false);
    $('#MfgDate').datepicker('update', firstDayWithSlashes);
    $('#ExpDate').datepicker('update', lastDayWithSlashes);

}

});
$("#btnNxtFirst").click(function () {
if ($("#ddProd").val()) {
    // value is set to a valid option, so submit form
    return true;
}
$("#ddProd").addClass('input-error');
return false;
});

$("#TID").change(function () {

// jobtype = $("#TID option:selected").text();
jobtypeId = $("#TID option:selected").val();

//if (jobtype == "France-CIP") {
//    $('#JobWithUID').attr('checked', false); // Unchecks it
//    $('#JobWithUID').attr('disabled', 'disabled');
//} else {
//    $('#JobWithUID').removeAttr('disabled');
//    $("#JobWithUID").prop('checked', true);
//}

if (jobtypeId == 26) {
    setLabelFilterValue('PPN2D1-9N-D-1T-S|PPN|EXP|LOT|UID');
}
else if (jobtypeId == 4) {
    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 17) {
    setLabelFilterValue('GS12D1-01-17-10|GTIN|EXP|LOT');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 29) {
    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 58) {
    setLabelFilterValue('GS12D1-01-21-10-17-240|GTIN|UID|LOT|EXP');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 10054) {
    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 10056) {
    setLabelFilterValue('GS12D1-21|UID');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 10055) {
    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID|EXFIELD');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 20058) {
    setLabelFilterValue('GS12D1-01-21-17-10|GTIN|UID|EXP|LOT');
    $("#Usenhrn").attr("disabled", "disabled");
    $("#Usenhrn").prop("checked", false);
    $(".NHRN").hide();
}
else if (jobtypeId == 20060) {

    setLabelFilterValue('GS12D1-01-21-17-10-710|NTIN|UID|EXP|LOT|NHRN');
    $("#Usenhrn").removeAttr("disabled");
    $("#Usenhrn").prop("checked", true);
    $(".NHRN").show();
}
});

function setLabelFilterValue(filterValue) {
//$('input[name="PPB[]"]').eq(8).val(filterValue);
//$('input[name="MOC[]"]').eq(8).val(filterValue);
//$('input[name="OBX[]"]').eq(8).val(filterValue);
//$('input[name="ISH[]"]').eq(8).val(filterValue);
//$('input[name="OSH[]"]').eq(8).val(filterValue);
//$('input[name="PAL[]"]').eq(8).val(filterValue);
}

function setLabelFilterTIDWise(type, FilterValue) {
debugger;
//if (jobtypeId == 26) {

$(type).eq(8).val(FilterValue);
//}
//else if (jobtypeId == 4) {
//    $(type).eq(8).val('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');

//}
//else if (jobtypeId == 17) {
//    $(type).eq(8).val('GS12D1-01-17-10|GTIN|EXP|LOT');

//}
//else if (jobtypeId == 29) {
//    $(type).eq(8).val('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');

//}
//else if (jobtypeId == 58) {
//    $(type).eq(8).val('GS12D1-01-21-10-17-240|GTIN|UID|LOT|EXP');

//}
//else if (jobtypeId == 10054) {
//    $(type).eq(8).val('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');

//}
//else if (jobtypeId == 10056) {
//    $(type).eq(8).val('GS12D1-21|UID');

//}
//else if (jobtypeId == 10055) {
//    $(type).eq(8).val('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID|EXFIELD');

//}
//else if (jobtypeId == 20058) {
//    $(type).eq(8).val('GS12D1-01-21-17-10|GTIN|UID|EXP|LOT');

//}
//else if (jobtypeId == 20060) {
//    $(type).eq(8).val('GS12D1-01-21-17-10-710|NTIN|UID|EXP|LOT|NHRN');

//}
}

$("#ddProd").change(function () {

jobtype = $("#TID option:selected").text();
var prod = $("#ddProd option:selected").text();


if (jobtype == "SOUTH KOREA") {
    $("#AgQty").attr("disabled", "disabled");
    $("#txtSurPlus").attr("disabled", "disabled");
    $.ajax({
        url: 'getKoreaGTINQty',
        type: "POST",
        dataType: 'json',
        data: { "prod": prod },
        success: function (data) {

            $("#AgQty").val(data);
            AgQty();


        },
        error: function (data) {

            toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});

}

else {
$("#AgQty").removeAttr("disabled");

}

});

function AgQty() {

if ($("#AgQty").val() <= 0) {
toastr.warning("@TnT.LangResource.GlobalRes.toastrScriptInvalidBatchQuantity");
    $("#AgQty").css("border", "red 1px solid");
    $("#BtnNxtAgg").attr("disabled", "disabled");

} else {
    $("#AgQty").css("border", "1px solid green");
    $("#BtnNxtAgg").removeAttr("disabled");
}
var initialPCMap = aggrigatonLevels[0];
var currentBatchQty = $("#AgQty").val();
if (currentBatchQty > 1000000) {

    toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobBatchQuantity");
    $("#AgQty").val("");
    $("#AgQty").css("border", "red 1px solid");
    return false;
}

if (currentBatchQty != "") {
    $('input[name="' + initialPCMap + '[]"]').eq(6).val(currentBatchQty);
    $('input[name="' + initialPCMap + '[]"]').eq(7).val(currentBatchQty);
}
else {
    $('input[name="' + initialPCMap + '[]"]').eq(6).val(0);
    $('input[name="' + initialPCMap + '[]"]').eq(7).val(0);
}

var firstMap = $('input[name="' + aggrigatonLevels[1] + '[]"]').eq(4).val();
var counter = 1;
for (k = 1; k < aggrigatonLevels.length; k++) {
    var PCM = $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(4).val();

    var cnt = parseInt($('input[name="' + aggrigatonLevels[k - 1] + '[]"]').eq(6).val()) / parseInt(PCM);
    cnt = Math.ceil(cnt);



    if (cnt == 0) {
        cnt = 1;
    }


    if (currentBatchQty != 0) {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(cnt);
    }
    else {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(6).val(0);
    }


    if ($("#txtSurPlus").val() != 0 || $("#txtSurPlus").val() != "") {

        if (counter == 1) {
            var olCount = $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val();
            var newCnt = parseInt(olCount) + parseInt($("#txtSurPlus").val());

            $('input[name="' + aggrigatonLevels[0] + '[]"]').eq(7).val(newCnt);

        }
    }

    counter++;
    var cntj = parseInt($('input[name="' + aggrigatonLevels[k - 1] + '[]"]').eq(7).val()) / parseInt(PCM);
    cntj = Math.ceil(cntj);



    if (cntj == 0) {
        cntj = 1;
    }
    //alert(cntj);
    if (currentBatchQty != 0) {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(7).val(cntj);
    }
    else {
        $('input[name="' + aggrigatonLevels[k] + '[]"]').eq(7).val(0);
    }
    if (counter == aggrigatonLevels.length) {
        counter = 0;
    }
    var agQtyVal = $("#AgQty").val();
    var surPlusVal = $("#txtSurPlus").val();
    if (parseInt(surPlusVal) > parseInt(agQtyVal)) {
        toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobSurplusUID");
    $("#txtSurPlus").val(agQtyVal);
}
$("#txtSurPlus").attr("max", parseInt($("#AgQty").val()));
}
}
</script>

<script>
    function DisableButtons() {
        $(".loading").show();
        var inputs = document.getElementsByTagName("button");
        for (var i in inputs) {
            if (inputs[i].type == "button" || inputs[i].type == "submit") {
                inputs[i].disabled = true;
            }
        }
    }
    window.onbeforeunload = DisableButtons;


    $("#PPB").change(function () {
        if (this.checked) {
            $(".PPB").show();
        } else {
            $(".PPB").hide();

        }
    });
    $("#MOC").change(function () {
        if (this.checked) {
            $(".MOC").show();
        } else {
            $(".MOC").hide();

        }
    });
    $("#OBX").change(function () {
        if (this.checked) {
            $(".OBX").show();
        } else {
            $(".OBX").hide();

        }
    });
    $("#ISH").change(function () {
        if (this.checked) {
            $(".ISH").show();
        } else {
            $(".ISH").hide();

        }
    });
    $("#OSH").change(function () {
        if (this.checked) {
            $(".OSH").show();
        } else {
            $(".OSH").hide();

        }
    });
    $("#PAL").change(function () {
        if (this.checked) {
            $(".PAL").show();
        } else {
            $(".PAL").hide();

        }
    });

    $("#btnSubmit").click(function () {

        $('#modal-Digital-Sign').load('@Url.Action("_Login", "Account")');
    $("#showDigitalBx").trigger("click");
});

function postData() {
    $('#MfgDate').removeAttr("disabled");
    $('#ExpDate').removeAttr("disabled");
    $('#AgQty').removeAttr("disabled");
    document.getElementById('frmJob').submit();
}






$(document).ready(function () {
    $("#Usenhrn").attr("disabled", "disabled");
    if ($('#PPB').is(':checked') == true) {
        $(".PPB").show();
    } else {
        $(".PPB").hide();

    }

    if ($('#MOC').is(':checked') == true) {
        $(".MOC").show();
    } else {
        $(".MOC").hide();

    }

    if ($('#OBX').is(':checked') == true) {
        $(".OBX").show();
    } else {
        $(".OBX").hide();

    }

    if ($('#ISH').is(':checked') == true) {
        $(".ISH").show();
    } else {
        $(".ISH").hide();

    }

    if ($('#OSH').is(':checked') == true) {
        $(".OSH").show();
    } else {
        $(".OSH").hide();

    }

    if ($('#PAL').is(':checked') == true) {
        $(".PAL").show();
    } else {
        $(".PAL").hide();

    }

    $('#frmProduct input[type=text]').attr("disabled", true);

    $('#JobName').blur(function () {

        var JobName = ($.trim($('#JobName').val()));
        $("#JobName").val(JobName);

        if (JobName != "") {
            $.ajax({
                url: 'IsJobNameExisting',
                type: "POST",
                dataType: 'json',
                data: { "JobName": JobName },
                success: function (data) {
                    if (data == true) {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobBatchName");
    $("#JobName").css("border", "red 1px solid");
    $("#JobName").val("");
} else {
    $("#JobName").css("border", "green 1px solid");
}
},
error: function (data) {

toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});
} else {
$("#JobName").css("border", "red 1px solid");
}
});
$("#divPPNCodes").hide();
});


$('#btnLastPre').click(function () {
if ($("#autoDate").is(':checked')) {
$('#MfgDate').attr("disabled", "disabled");
$('#ExpDate').attr("disabled", "disabled");
}
});

$("#TID").change(function () {
jQuery(this).parents('trPPN').find('input').val('');
jobtype = $("#TID option:selected").text();

if (jobtype == "Germany-PPN") {
$(".trPPN").show();
$("#divPPNCodes").show();
$("#PPNCountryCode").attr("validate", "true");
$("#PPNPostalCode").attr("validate", "true");
} else {
$(".trPPN").hide();
$("#divPPNCodes").hide();
$("#PPNCountryCode").removeAttr("validate", "");
$("#PPNPostalCode").removeAttr("validate", "");
}
});

$('#TID').change(function () {


JobId = $('#TID').val();

$('#ddProd').html('');


if (JobId != "") {
$.ajax({
url: 'getTypeWiseProducts',
type: "POST",
dataType: 'json',
data: { "JobId": JobId },
success: function (data) {
console.log(data);
strSel = "<option value=''>@TnT.LangResource.GlobalRes.JobCreateDrpCode</option>";
    for (i = 0; i < data.length; i++) {
        strSel += "<option value='" + data[i].PAID + "'>" + data[i].FGCode + "</option>";
    }
    $('#ddProd').html(strSel);
},
error: function (data) {

    toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});
}
else {
$('#ddProd').html('');
}
});
$(document).ready(function () {
$(window).keydown(function (event) {
if (event.keyCode == 13) {
event.preventDefault();
return false;
}
});
});


$('#PrimaryPCMapCount').change(function () {
if ($('#PrimaryPCMapCount').val() == 0) {
$('#PrimaryPCMapCount').val('');
$("#PrimaryPCMapCount").css("border", "red 1px solid");
toastr.warning("@TnT.LangResource.GlobalRes.toastrCreateJobPCMap");
} else {
    $("#PrimaryPCMapCount").css("border", "green 1px solid");
}
});

$('#ExpDateFormat').change(function () {

ExpDateFormat = $("#ExpDateFormat option:selected").text();
segment1 = ExpDateFormat.substr(0, 2);
if (ExpDateFormat.toLowerCase().indexOf("d") >= 0) {
    $('#UseExpDay').prop("checked", true); // Unchecks it
} else {
    $('#UseExpDay').attr('checked', false); // Unchecks it
}

});

$('#AgQty').blur(function () {

checkTUIDStatus();
});

$('#txtSurPlus').change(function () {
checkTUIDStatus();
});
function checkTUIDStatus() {
debugger
var SelectedProviderId = $('#ProviderId').val();
var type = $("#TID option:selected").text();
var cust = $("#CustomerId").val();
var compType = $("#CompType").val();
if (SelectedProviderId != 4) {
    var dataString = "";
    var PPBGTIN = "", MOCGTIN = "", OBXGTIN = "", ISHGTIN = "", OSHGTIN = "", PALGTIN = "";
    debugger;
    $(".loading").show();
    if (compType == "GTIN") {
        PPBGTIN = $('input[name="PPB[]"]').eq(1).val();
        MOCGTIN = $('input[name="MOC[]"]').eq(1).val();
        OBXGTIN = $('input[name="OBX[]"]').eq(1).val();
        ISHGTIN = $('input[name="ISH[]"]').eq(1).val();
        OSHGTIN = $('input[name="OSH[]"]').eq(1).val();
        PALGTIN = $('input[name="PAL[]"]').eq(1).val();

    }
    else {
        PPBGTIN = $('input[name="PPB[]"]').eq(2).val();
        MOCGTIN = $('input[name="MOC[]"]').eq(2).val();
        OBXGTIN = $('input[name="OBX[]"]').eq(2).val();
        ISHGTIN = $('input[name="ISH[]"]').eq(2).val();
        OSHGTIN = $('input[name="OSH[]"]').eq(2).val();
        PALGTIN = $('input[name="PAL[]"]').eq(2).val();
    }
    var PPBQty = $('input[name="PPB[]"]').eq(7).val();
    //var PPBGTIN = $('input[name="PPB[]"]').eq(1).val();
    if (PPBQty != "") {
        dataString += PPBGTIN + ":" + PPBQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var MOCQty = $('input[name="MOC[]"]').eq(7).val();
    //var MOCGTIN = $('input[name="MOC[]"]').eq(1).val();
    if (MOCQty != "") {
        dataString += MOCGTIN + ":" + MOCQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var OBXQty = $('input[name="OBX[]"]').eq(7).val();
    //var OBXGTIN = $('input[name="OBX[]"]').eq(1).val();
    if (OBXQty != "") {
        dataString += OBXGTIN + ":" + OBXQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var ISHQty = $('input[name="ISH[]"]').eq(7).val();
    //var ISHGTIN = $('input[name="ISH[]"]').eq(1).val();
    if (ISHQty != "") {
        dataString += ISHGTIN + ":" + ISHQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var OSHQty = $('input[name="OSH[]"]').eq(7).val();
    //var OSHGTIN = $('input[name="OSH[]"]').eq(1).val();
    if (OSHQty != "") {
        dataString += OSHGTIN + ":" + OSHQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var PALQty = $('input[name="PAL[]"]').eq(7).val();
    //var PALGTIN = $('input[name="PAL[]"]').eq(1).val();
    if (PALQty != "") {
        dataString += PALGTIN + ":" + PALQty + ":" + SelectedProviderId + ":" + compType + ", ";
    }

    var lastChar = dataString.slice(-2);
    if (lastChar == ", ") {
        dataString = dataString.substring(0, dataString.length - 2);
    }
    var PAID = $("#ddProd option:selected").val();
    var TID = $("#TID option:selected").text();
    debugger;
    $.ajax({
        url: 'IsTracelinkUIDsAvailable',
        type: "POST",
        dataType: 'json',
        data: { "dataString": dataString, "PAID": PAID, "ProviderId": SelectedProviderId, "Customerid": cust, "Jobtype": TID },
        success: function (data) {
            debugger
            var msg = data;
            var result = msg.split(',');

            result[0] = result[0].replace('"', '');

            if (result[0] != "@TnT.LangResource.GlobalRes.TempDataImporterDataimported") {

        if (result[0] != "@TnT.LangResource.GlobalRes.TempDatarequiredNoofUidalredyExist") {
        $("#BtnNxtAgg").attr("disabled", "disabled");
        toastr.warning(msg);
    }
    else {
        $("#BtnNxtAgg").removeAttr("disabled");
    }

}
else {
    $("#BtnNxtAgg").removeAttr("disabled");
}
$(".loading").hide();
},
error: function (data) {

toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});
}
else if (type == "CHINACODE") {
var dataString = "";
$(".loading").show();
var PPBQty = $('input[name="PPB[]"]').eq(7).val();
var PPBGTIN = $('input[name="PPB[]"]').eq(1).val();
if (PPBQty != "") {
dataString += "PPB" + ":" + PPBQty + ",";
}

var MOCQty = $('input[name="MOC[]"]').eq(7).val();
var MOCGTIN = $('input[name="MOC[]"]').eq(1).val();
if (MOCQty != "") {
dataString += "MOC" + ":" + MOCQty + ",";
}

var OBXQty = $('input[name="OBX[]"]').eq(7).val();
var OBXGTIN = $('input[name="OBX[]"]').eq(1).val();
if (OBXQty != "") {
dataString += "OBX" + ":" + OBXQty + ",";
}

var ISHQty = $('input[name="ISH[]"]').eq(7).val();
var ISHGTIN = $('input[name="ISH[]"]').eq(1).val();
if (ISHQty != "") {
dataString += "ISH" + ":" + ISHQty + ",";
}

var OSHQty = $('input[name="OSH[]"]').eq(7).val();
var OSHGTIN = $('input[name="OSH[]"]').eq(1).val();
if (OSHQty != "") {
dataString += "OSH" + ":" + OSHQty + ",";
}

var PALQty = $('input[name="PAL[]"]').eq(7).val();
var PALGTIN = $('input[name="PAL[]"]').eq(1).val();
if (PALQty != "") {
dataString += "PAL" + ":" + PALQty;
}

var lastChar = dataString.slice(-2);
if (lastChar == ", ") {
dataString = dataString.substring(0, dataString.length - 2);
}
var PAID = $("#ddProd option:selected").val();

$.ajax({
url: 'IsChinaUIDsAvailable',
type: "POST",
dataType: 'json',
data: { "dataString": dataString, "PAID": PAID },
success: function (data) {
    var msg = data;
    toastr.warning(msg);
    if (msg != "UIDs are available.") {
        $("#BtnNxtAgg").attr("disabled", "disabled");
    }
    else {
        $("#BtnNxtAgg").removeAttr("disabled");
    }
    $(".loading").hide();
}
});
}
}
$(document).ready(function (e) {
$('select option').each(function () {
if ($(this).text() == 'DGFT') {
$(this).text('India-DGFT');
}
if ($(this).text() == 'CIP') {
$(this).text('France-CIP');
}
if ($(this).text() == 'PPN') {
$(this).text('Germany-PPN');
}
if ($(this).text() == 'DSCSA') {
$(this).text('USA-DSCSA');
}
if ($(this).text() == 'SOUTH_KOREA') {
$(this).text('SOUTH KOREA');
}
if ($(this).text() == 'SAUDI_ARABIA') {
$(this).text('SAUDI ARABIA');
}


});

});

function loadPreview(lblElementID) {
var lblName = $('select[name="' + lblElementID + '[]"]').eq(0).val();
if (lblName == "") {
$('#modal-msg').html('@TnT.LangResource.GlobalRes.toastrProductCreateselectlabel');
    $("#showMSGBx").trigger("click");
    return false;
}


if (lblName != "") {

    var FileName = lblName.replace("zpl", "png");
    $("#showPrvwBx").trigger("click");
    $(".lblImage").attr("src", "/Content/LabelDesigners/PrintView/" + FileName);



} else {
    //$(".loading").hide();
    $("#loadTemData").html("");
    //messsage

}
}

$("#ddProd").change(function () {
debugger;
var paid = $("#ddProd").val();


//var jobt = $("#ddProd option:selected").text();


    if (paid == "")
    {

    //$('#modal-msg').html('Please Select Code : ');
    //$("#showMSGBx").trigger("click");
    $('#txtProductName').val('');
    $('#txtProductCode').val('');

}

else {


    var dual = JSON.parse('@Html.Raw(Json.Encode(duallabel))');
    $('#ddPPBLable').html('');
    $('#ddMOCLable').html('');
    $('#ddOBXLable').html('');
    $('#ddISHLable').html('');
    $('#ddOSHLable').html('');
    $('#ddPALLable').html('');
    $('#ddPartialPPBLable').html('');
    $('#ddPartialMOCLable').html('');
    $('#ddPartialOBXLable').html('');
    $('#ddPartialISHLable').html('');
    $('#ddPartialOSHLable').html('');
    $('#ddPartialPALLable').html('');
    $.ajax({
        url: 'GetLabelDesignerFiles',
        type: "POST",
        dataType: 'json',
        data: { "PAID": paid },
        success: function (data) {

            strSel = "<option value=''>@TnT.LangResource.GlobalRes.JobCreateDrpLabel</option>";
            for (i = 0; i < data[0].length; i++) {
                strSel += "<option value='" + data[0][i] + "'>" + data[0][i] + "</option>";
            }




            $('#ddMOCLable').html(strSel);
            $('#ddOBXLable').html(strSel);
            $('#ddISHLable').html(strSel);
            $('#ddOSHLable').html(strSel);
            $('#ddPALLable').html(strSel);
            $('#ddPPBLable').html(strSel);
            $('#ddPartialPPBLable').html(strSel);
            $('#ddPartialMOCLable').html(strSel);
            $('#ddPartialOBXLable').html(strSel);
            $('#ddPartialISHLable').html(strSel);
            $('#ddPartialOSHLable').html(strSel);
            $('#ddPartialPALLable').html(strSel);
    debugger;
    var LabelList = data[1];
    dual = true;
    for (var i = 0; i < LabelList.length; i++) {
        validate(LabelList[i].Code);
        var labelname = LabelList[i].LabelName.split(',');

        $('#dd' + LabelList[i].Code + 'Lable').val("");

        $('#dd' + LabelList[i].Code + 'Lable option').each(function () {
            if (this.value == labelname[0]) {
                $('#dd' + LabelList[i].Code + 'Lable').val(labelname[0]);
            }
        });

        $('#ddPartial' + LabelList[i].Code + 'Lable').val("");
        if (dual) {
            $('#ddPartial' + LabelList[i].Code + 'Lable option').each(function () {
                if (this.value == labelname[0] && labelname.length > 1) {
                    $('#ddPartial' + LabelList[i].Code + 'Lable').val(labelname[1]);
                }
            });
        }

        setLabelFilterTIDWise('input[name="' + LabelList[i].Code + '[]"]', LabelList[i].Filter)


        //if (LabelList[i].Code == "PPB") {
        //    if (dual) {
        //        $('#ddPartialPPBLable').val(labelname[1]);
        //        $('#ddPPBLable').val(labelname[0]);
        //    }
        //    else {
        //        $('#ddPPBLable').val(labelname[0]);
        //    }
        //    setLabelFilterTIDWise('input[name="PPB[]"]', LabelList[i].Filter)
        //}
        //if (LabelList[i].Code == "MOC") {
        //    if (dual) {
        //        var labelname = LabelList[i].LabelName.split(',');
        //        $('#ddMOCLable').val(labelname[0]);
        //        $('#ddPartialMOCLable').val(labelname[1]);
        //    }
        //    else {
        //        $('#ddMOCLable').val(LabelList[i].LabelName);
        //    }
        //    setLabelFilterTIDWise('input[name="MOC[]"]', LabelList[i].Filter)

        //}
        //if (LabelList[i].Code == "OBX") {
        //    if (dual) {
        //        var labelname = LabelList[i].LabelName.split(',');
        //        $('#ddOBXLable').val(labelname[0]);
        //        $('#ddPartialOBXLable').val(labelname[1]);
        //    }
        //    else {
        //        $('#ddOBXLable').val(LabelList[i].LabelName);
        //    }
        //    setLabelFilterTIDWise('input[name="OBX[]"]', LabelList[i].Filter)

        //}
        //if (LabelList[i].Code == "ISH") {
        //    if (dual) {
        //        var labelname = LabelList[i].LabelName.split(',');
        //        $('#ddISHLable').val(labelname[0]);
        //        $('#ddPartialISHLable').val(labelname[1]);
        //    }
        //    else {
        //        $('#ddISHLable').val(LabelList[i].LabelName);
        //    }
        //    setLabelFilterTIDWise('input[name="ISH[]"]', LabelList[i].Filter)

        //}
        //if (LabelList[i].Code == "OSH") {
        //    if (dual) {
        //        var labelname = LabelList[i].LabelName.split(',');
        //        $('#ddOSHLable').val(labelname[0]);
        //        $('#ddPartialOSHLable').val(labelname[1]);
        //    }
        //    else {
        //        $('#ddOSHLable').val(LabelList[i].LabelName);
        //    }
        //    setLabelFilterTIDWise('input[name="OSH[]"]', LabelList[i].Filter)

        //}
        //if (LabelList[i].Code == "PAL") {
        //    if (dual) {
        //        var labelname = LabelList[i].LabelName.split(',');
        //        $('#ddPALLable').val(labelname[0]);
        //        $('#ddPartialPALLable').val(labelname[1]);
        //    }
        //    else {
        //        $('#ddPALLable').val(LabelList[i].LabelName);
        //    }
        //    setLabelFilterTIDWise('input[name="PAL[]"]', LabelList[i].Filter)

        //}
    }
    jobtypeId = $("#TID option:selected").val();


    //if (jobtype == "France-CIP") {
    //    $('#JobWithUID').attr('checked', false); // Unchecks it
    //    $('#JobWithUID').attr('disabled', 'disabled');
    //} else {
    //    $('#JobWithUID').removeAttr('disabled');
    //    $("#JobWithUID").prop('checked', true);
    //}

    //if (jobtypeId == 26) {
    //    setLabelFilterValue('PPN2D1-9N-D-1T-S|PPN|EXP|LOT|UID');
    //}
    //else if (jobtypeId == 4) {
    //    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    //}
    //else if (jobtypeId == 17) {
    //    setLabelFilterValue('GS12D1-01-17-10|GTIN|EXP|LOT');
    //}
    //else if (jobtypeId == 29) {
    //    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    //}
    //else if (jobtypeId == 58) {
    //    setLabelFilterValue('GS12D1-01-21-10-17-240|GTIN|UID|LOT|EXP');
    //}
    //else if (jobtypeId == 10054) {
    //    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID');
    //}
    //else if (jobtypeId == 10056) {
    //    setLabelFilterValue('GS12D1-21|UID');
    //}
    //else if (jobtypeId == 10055) {
    //    setLabelFilterValue('GS12D1-01-17-10-21|GTIN|EXP|LOT|UID|EXFIELD');
    //}
    //else if (jobtypeId == 20058) {
    //    setLabelFilterValue('GS12D1-01-21-17-10|GTIN|UID|EXP|LOT');
    //}
},
error: function (data) {

    toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

}
});
}
});

$("#Usemfg").change(function () {

var paid = $("#ddProd").val();
if (paid != "") {

if ($(this).is(':checked')) {
var PPB = $('input[name="PPB[]"]').eq(8).val() + "|MFG";
var MOC = $('input[name="MOC[]"]').eq(8).val() + "|MFG";
var OBX = $('input[name="OBX[]"]').eq(8).val() + "|MFG";
var ISH = $('input[name="ISH[]"]').eq(8).val() + "|MFG";
var OSH = $('input[name="OSH[]"]').eq(8).val() + "|MFG";
var PAL = $('input[name="PAL[]"]').eq(8).val() + "|MFG";
if ($('input[name="PPB[]"]').eq(1).val() == "") {
    $('input[name="PPB[]"]').eq(8).val("");
}
else {
    $('input[name="PPB[]"]').eq(8).val(PPB)
}

if ($('input[name="MOC[]"]').eq(1).val() == "") {
    $('input[name="MOC[]"]').eq(8).val("");
}
else {
    $('input[name="MOC[]"]').eq(8).val(MOC);
}

if ($('input[name="OBX[]"]').eq(1).val() == "") {
    $('input[name="OBX[]"]').eq(8).val("");
}
else {
    $('input[name="OBX[]"]').eq(8).val(OBX);
}

if ($('input[name="ISH[]"]').eq(1).val() == "") {
    $('input[name="ISH[]"]').eq(8).val("");
}
else {
    $('input[name="ISH[]"]').eq(8).val(ISH);
}

if ($('input[name="OSH[]"]').eq(1).val() == "") {
    $('input[name="OSH[]"]').eq(8).val("");
}
else {
    $('input[name="OSH[]"]').eq(8).val(OSH);
}

if ($('input[name="PAL[]"]').eq(1).val() == "") {
    $('input[name="PAL[]"]').eq(8).val("");
}
else {
    $('input[name="PAL[]"]').eq(8).val(PAL);
}
} else {

if ($('input[name="PPB[]"]').eq(1).val() == "") {
    $('input[name="PPB[]"]').eq(8).val("");
}
else {
    PPB = $('input[name="PPB[]"]').eq(8).val().slice(0, -4);
    $('input[name="PPB[]"]').eq(8).val(PPB)
}

if ($('input[name="MOC[]"]').eq(1).val() == "") {
    $('input[name="MOC[]"]').eq(8).val("");
}
else {
    MOC = $('input[name="MOC[]"]').eq(8).val().slice(0, -4);
    $('input[name="MOC[]"]').eq(8).val(MOC);
}

if ($('input[name="OBX[]"]').eq(1).val() == "") {
    $('input[name="OBX[]"]').eq(8).val("");
}
else {
    OBX = $('input[name="OBX[]"]').eq(8).val().slice(0, -4);
    $('input[name="OBX[]"]').eq(8).val(OBX);
}

if ($('input[name="ISH[]"]').eq(1).val() == "") {
    $('input[name="ISH[]"]').eq(8).val("");
}
else {
    ISH = $('input[name="ISH[]"]').eq(8).val().slice(0, -4);
    $('input[name="ISH[]"]').eq(8).val(ISH);
}

if ($('input[name="OSH[]"]').eq(1).val() == "") {
    $('input[name="OSH[]"]').eq(8).val("");
}
else {
    OSH = $('input[name="OSH[]"]').eq(8).val().slice(0, -4);
    $('input[name="OSH[]"]').eq(8).val(OSH);
}

if ($('input[name="PAL[]"]').eq(1).val() == "") {
    $('input[name="PAL[]"]').eq(8).val("");
}
else {
    PAL = $('input[name="PAL[]"]').eq(8).val().slice(0, -4);
    $('input[name="PAL[]"]').eq(8).val(PAL);
}
}
}
else {
toastr.warning("@TnT.LangResource.GlobalRes.toastrJobCreateSelectFGCode");
    $("#Usemfg").removeAttr("checked");
}
});


$('#CompType').change(function () {
var tradeNumberVal = $('#CompType').val();

if (tradeNumberVal == 'GTIN') {
    var GTINVal = $('input[name="MOC[]"]').eq(1).val();
    if (GTINVal == "") {
        $('#modal-msg').html('@TnT.LangResource.GlobalRes.ShwMsgJobCreateGTINNotProvided');
    $("#showMSGBx").trigger("click");
    $(".btn-next").attr("disabled", true);

} else {
    $(".btn-next").removeAttr("disabled");
}
} else if (tradeNumberVal == 'NTIN') {
var NTINVal = $('input[name="MOC[]"]').eq(2).val();
if (NTINVal == "") {
    $('#modal-msg').html('@TnT.LangResource.GlobalRes.ShwMsgJobCreateNTINNotProvided');
    $("#showMSGBx").trigger("click");
    $(".btn-next").attr("disabled", true);
} else {
    $(".btn-next").removeAttr("disabled");
}
}
});
//$('#BatchNo').change(function () {
//    var $BatchNo = $('#BatchNo');
//    $BatchNo.val($.trim($BatchNo.val()))

//    if ($BatchNo.val().match(/^[a-zA-Z0-9-/]+$/)) {

//        return true
//    }
//    else
//    {
//        $BatchNo.val("");

//        toastr.warning("Batch No should be alphanumeric and can contain /-");
//    }
//});
</script>
<script>


    $(document).ready(function () {
        $(".NHRN").hide();
        $.fn.regexMask = function (mask) {
            $(this).keypress(function (event) {
                if (!event.charCode) return true;
                var part1 = this.value.substring(0, this.selectionStart);
                var part2 = this.value.substring(this.selectionEnd, this.value.length);
                if (!mask.test(part1 + String.fromCharCode(event.charCode) + part2))
                    return false;
            });
        };

        var mask = new RegExp('^[A-Za-z0-9-/$]*$')
        $('#BatchNo').regexMask(mask)
    });
    function validate(lvl) {
        $('input[name="' + lvl + '[]"]').eq(1).addClass("valGTIN");
        $('input[name="' + lvl + '[]"]').eq(2).addClass("valGTIN");
        $('input[name="' + lvl + '[]"]').eq(4).attr("readonly", "readonly");
        $('input[name="' + lvl + '[]"]').eq(5).attr("readonly", "readonly");
        $('input[name="' + lvl + '[]"]').eq(5).attr("validate", "true");
        //$('input[name="' + lvl + '[]"]').eq(5).val(0);
        $('input[name="' + lvl + '[]"]').eq(3).attr("validate", "true");
        $('input[name="' + lvl + '[]"]').eq(6).attr("validate", "true");
        //  $('input[name="' + lvl + '[]"]').eq(4).val(0);
        $('input[name="' + lvl + '[]"]').eq(4).attr("validate", "true");
        $('select[name="' + lvl + '[]"]').eq(0).attr("validate", "true");
        $('input[name="' + lvl + '[]"]').eq(7).attr("validate", "true");
    }
</script>