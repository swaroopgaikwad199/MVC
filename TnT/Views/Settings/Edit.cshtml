@model TnT.Models.SettingsNUtility.Settings

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Home/_Layout.cshtml";
}


<h2>
    @TnT.LangResource.GlobalRes.SettingsEditCompanyInfo
    <a style="float: right; margin-right: 5px;" href='@Url.Action("Index","Settings")' class="btn btn-danger btn-icon icon-left">
       @TnT.LangResource.GlobalRes.cmnBtnBackToList
        <i class="fa fa-reply"></i>
    </a>

</h2>

@using(Html.BeginForm("Edit", "Settings", FormMethod.Post,new { enctype="multipart/form-data", id="frmSettings" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Logo)




    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompCompanyName, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompAddress, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" } })
                        @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6" style="display:none;">
                <div class="form-group">
                    @Html.LabelFor(model => model.LineCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompLineCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LineCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LineCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompRemark, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PlantCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompPlantCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PlantCode, new { htmlAttributes = new { @class = "form-control NumbersOnly", @maxlength = "2" } })
                        @Html.ValidationMessageFor(model => model.PlantCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IAC_CIN, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompPPN, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IAC_CIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IAC_CIN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.GLN, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompGLN, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GLN, new { htmlAttributes = new { @class = "form-control NumbersOnly", @maxlength = "13" } })
                        @Html.ValidationMessageFor(model => model.GLN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompStreet, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompCountry, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Country,"Id","CountryName",Model.Country), new { @class = "form-control", onchange = "Action(this.value);" })*@
                        @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.Country, @TnT.LangResource.GlobalRes.ProductDrpSelectCountry, new { @class = "form-control", onchange = "Action(this.value);", @id = "Country" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateOrRegion, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompState, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @*<select class="form-control required" data-val="true" data-val-required="The StateOrRegion field is required." id="ddState" name="State" validate="true">
                                <option value="">Select State</option>
                            </select>*@
                        @Html.DropDownListFor(model => model.StateOrRegion, (SelectList)ViewBag.StateOrRegion,@TnT.LangResource.GlobalRes.CustomerCreateDrpSelectState, new { @class = "form-control", @id = "StateOrRegion" })
                        @Html.ValidationMessageFor(model => model.StateOrRegion, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompCity, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompPostalCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.License, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompLicense, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.License, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.License, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LicenseState, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompLicenseState, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.LicenseState, (SelectList)ViewBag.LicenseState, "Select License State", new { @class = "form-control", @id = "LicenseState" })
                        @Html.ValidationMessageFor(model => model.LicenseState, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LicenseAgency, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipCompLicenseAgency, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LicenseAgency, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LicenseAgency, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    


        <div class="row">
            <div class="col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" id="btnSubmit" value="@TnT.LangResource.GlobalRes.cmnBtnUpdate" class="btn btn-info" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <script>
                $(document).ready(function () {
                    debugger;

                    $('#Country').val('@Model.Country');


                    $('#StateOrRegion').val('@Model.StateOrRegion');


                    $('#LicenseState').val('@Model.LicenseState');

                });
                function Action(ConID) {
                    if (ConID != "") {
                        $.ajax({
                            url: '@Url.Action("getStateOrRegion", "Settings")',
                            type: "POST",
                            dataType: 'json',
                            data: { "Conid": ConID },
                            success: function (data) {
                                debugger;
                                if (data != null) {

                                    $("#StateOrRegion").find("option").remove();
                                    $("#LicenseState").find("option").remove();
                                    var optionhtml1 = '<option value="' +
                               0 + '">' + "--Select State--" + '</option>';
                                    $("#StateOrRegion").append(optionhtml1);
                                    $("#LicenseState").append(optionhtml1);
                                    //$.each(data, function (i) {

                                    for (i = 0; i < data.length; i++) {

                                        var optionhtml = '<option value="' +
                                    data[i].ID + '">' + data[i].StateName + '</option>';
                                        $("#StateOrRegion").append(optionhtml);
                                        $("#LicenseState").append(optionhtml);
                                    }
                                    //});
                                }
                            },
                            error: function (data) {

                                toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

                            }
                        });
                    }
                    else
                    {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingSelectCountry");
                    }
                }
            </script>

            <script>
                $("#btnSubmit").click(function () {
                    debugger;
                    var CompanyName = $("#CompanyName").val();
                    var Address = $("#Address").val();
                    var FileLogo = $("#FileLogo").val();
                    var Country = $("#Country").val();
                    var ddState = $("#StateOrRegion").val();
                    var LicenseAgency = $("#LicenseAgency").val();
                    var PlantCode = $("#PlantCode").val();
                    var CompanyCode = $("#CompanyCode").val();
                    var msg = "";
                    if (CompanyName == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.showMsgCustomerCreateCompanyName");
                        msg += "@TnT.LangResource.GlobalRes.showMsgCustomerCreateCompanyName";
                        $("#CompanyName").val("");
                        $("#CompanyName").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#CompanyName").css("border", "green 1px solid");
                    }

                    if (CompanyCode == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingCompanyCode");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingCompanyCode";
                        $("#CompanyCode").val("");
                        $("#CompanyCode").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#CompanyCode").css("border", "green 1px solid");
                    }

                    if (Address == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingComanyAddress");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingComanyAddress";
                        $("#Address").val("");
                        $("#Address").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#Address").css("border", "green 1px solid");
                    }

                    if (FileLogo == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingSelectLogo");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingSelectLogo";
                        $("#FileLogo").val("");
                        $("#FileLogo").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#FileLogo").css("border", "green 1px solid");
                    }

                    if (Country == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingSelectCountry");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingSelectCountry";
                        $("#Country").val("");
                        $("#Country").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#Country").css("border", "green 1px solid");
                    }

                    if (ddState == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingSelectState");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingSelectState";
                        $("#ddState").val("");
                        $("#ddState").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#ddState").css("border", "green 1px solid");
                    }

                    if (LicenseAgency == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.showMsgCustomerCreateLicenseAgency");
                        msg += "@TnT.LangResource.GlobalRes.showMsgCustomerCreateLicenseAgency";
                        $("#LicenseAgency").val("");
                        $("#LicenseAgency").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#LicenseAgency").css("border", "green 1px solid");
                    }
                    if (PlantCode == "") {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingProvidePlantCode");
                        msg += "@TnT.LangResource.GlobalRes.toastrSettingProvidePlantCode";
                        $("#PlantCode").val("");
                        $("#PlantCode").css("border", "red 1px solid");
                        return false;
                    } else {
                        $("#PlantCode").css("border", "green 1px solid");
                    }
                    //if (extension == 'png') {
                    //    $("#FileLogo").css("border", "green 1px solid");
                    //    return true;
                    //} else {
                    //    toastr.warning("Please provide logo in .png format");
                    //    msg += "Please provide logo in .png format";
                    //    $("#FileLogo").val("");
                    //    $("#FileLogo").css("border", "red 1px solid");
                    //    return false;
                    //}

                    if (msg == "") {
                        formSubmit();
                    }
                });




                $(".NumbersOnly").keydown(function (e) {
                    // Allow: backspace, delete, tab, escape, enter and .
                    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                        // Allow: Ctrl+A, Command+A
                        (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                        // Allow: home, end, left, right, down, up
                        (e.keyCode >= 35 && e.keyCode <= 40)) {
                        // let it happen, don't do anything
                        return;
                    }
                    // Ensure that it is a number and stop the keypress
                    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                        e.preventDefault();
                    }
                });


                function formSubmit() {

                    document.getElementById("frmSettings").submit();

                }
            </script>
            }


