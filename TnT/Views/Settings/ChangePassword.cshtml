@model TnT.Models.Account.Users

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Home/_Layout.cshtml";
}



@using (Html.BeginForm("ChangePassword", "Settings", FormMethod.Post, new { @id = "frmChangePwd" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-success">
        <div class="panel-heading"><h2>@TnT.LangResource.GlobalRes.UsersChangePassword</h2></div>
        <div class="panel-body">
            <div class="form-horizontal" id="frmUsr">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.UserName)
                @Html.HiddenFor(model => model.UserName1)
                @Html.HiddenFor(model => model.EmailId)


                <div class="form-group">
                    @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "true", @onchange = "updateELEM(this);" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @required = "true", @onchange = "updateELEM(this);" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" id="btnSubmit" class="btn btn-info" value="@TnT.LangResource.GlobalRes.UsersChangePassword" onclick="return Validate()" />
                    </div>
                </div>

            </div>
        </div>
    </div>

  
}

<script>
    $("#OldPassword").change(function () {

        var oldPassword = $("#OldPassword").val();
        @*var Uid=@User.ID;*@
        var Uid=@Convert.ToInt32(User.ID);

        if (oldPassword != "") {
            $.ajax({
                url: '@Url.Action("GetOldPassword", "Settings")',
                type: "POST",
                dataType: 'json',
                data: {"OldPassword":oldPassword,"Uid":Uid},
                success: function (data) {
                    if (data == false) {
                        toastr.warning("@TnT.LangResource.GlobalRes.toastrChangePwdInvalidPwd");
                        $("#OldPassword").css("border", "red 1px solid");
                        $("#OldPassword").val("");


                    } else {
                        $("#OldPassword").css("border", "green 1px solid");


                    }
                },
                error: function (data) {

                    toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

                }
            });
        }
        else
        {
            $("#OldPassword").css("border", "red 1px solid");
            toastr.warning("@TnT.LangResource.GlobalRes.toastrSettingsEntrOldpwd");
        }
    });

    $("#btnSubmit").click(function () {
       
        var Password = $("#Password").val();
        var ConfirmPassword = $("#ConfirmPassword").val();
        var OldPassword= $("#OldPassword").val();
        var msgPOST = "";

        if (Password == "") {
            showMessage("Password", "@TnT.LangResource.GlobalRes.showMessageSetPasswordProvidePassword");
            msgPOST += "@TnT.LangResource.GlobalRes.showMessageSetPasswordProvidePassword";
        } else {
            clearColor("Password");
        }
        if (ConfirmPassword == "") {
            showMessage("ConfirmPassword", "@TnT.LangResource.GlobalRes.showMessageSetPasswordConfirmPassword")
            msgPOST += "@TnT.LangResource.GlobalRes.showMessageSetPasswordConfirmPassword";
        } else {
            clearColor("ConfirmPassword");
        }
        if (OldPassword == "") {
            showMessage("OldPassword", "@TnT.LangResource.GlobalRes.toastrChangePwdProvideOldPwd")
            msgPOST += "@TnT.LangResource.GlobalRes.toastrChangePwdProvideOldPwd";
        } else {
            clearColor("OldPassword");
        }

        if (msgPOST == "") {
            formSubmit();
        }
    });

    $("#Password").change(function () {
        debugger;
        var Password = $("#Password").val();
        var pwdmax = '@ViewData["maxpwd"]';
        var pwdmin = '@ViewData["minpwd"]';
        var passMSG = "";

        //validate letter
        if (!(Password.match(/[a-z]/))) {
            passMSG += "@TnT.LangResource.GlobalRes.passMessageSetPasswordValidateLetter";
        }

        //validate capital letter
        if (!(Password.match(/[A-Z]/))) {
            passMSG += "@TnT.LangResource.GlobalRes.passMessageSetPasswordCapitalLetter";
        }

        //validate number
        if (!(Password.match(/\d/))) {
            passMSG += "@TnT.LangResource.GlobalRes.passMessageSetPasswordCapitalNumber";
        }

        //validate number
        if (!(Password.match(/[^\w\s]/))) {
            passMSG += "@TnT.LangResource.GlobalRes.passMessageSetPasswordSpetialCharacter";
        }

        if (Password.length < pwdmin || Password.length>pwdmax) {
            passMSG += "@TnT.LangResource.GlobalRes.passMessageSetPasswordNeedsMin "+pwdmin+" @TnT.LangResource.GlobalRes.passMessageSetPasswordcharacters";
        }


        if (passMSG != "") {
            toastr.warning("@TnT.LangResource.GlobalRes.toastrSetPasswordNeedscombination1 "+ pwdmin +" @TnT.LangResource.GlobalRes.toastrSetPasswordNeedscombination2");
            $("#Password").val('');
            $("#Password").focus();
            $("#Password").css("border", "red 1px solid");
            return false;
        }
        else
        {

        }

    });
    $("#ConfirmPassword").change(function () {
        var Password = $("#Password").val();
        var ConfirmPassword = $("#ConfirmPassword").val();
        if (Password != ConfirmPassword) {
            toastr.warning("@TnT.LangResource.GlobalRes.toastrSetPasswordConfirmPasswordnotmatching");
            $("#ConfirmPassword").val("");
            $("#ConfirmPassword").css("border", "red 1px solid");
            return false;
        }
    });

    function showMessage(elementID, msg) {
        toastr.warning(msg);
        $("#" + elementID).val("");
        $("#" + elementID).css("border", "red 1px solid");
        return false;
    }
    function clearColor(elementID) {
        $("#" + elementID).css("border", "green 1px solid");
    }
    function updateELEM(obj) {
        if (obj.value != "") {
            $("#" + obj.id).css("border", "green 1px solid");
        }
    }
    function formSubmit() {
        document.getElementById("frmChangePwd").submit();

    }
</script>
<script type="text/javascript">
    function Validate() {
        var password = document.getElementById("Password").value;
        var confirmPassword = document.getElementById("ConfirmPassword").value;
        if (password != confirmPassword) {
            alert("@TnT.LangResource.GlobalRes.toastrSettingChgPwdnotMatch");
            return false;
        }
        return true;
    }
</script>