@model TnT.Models.EPCIS.M_EPCISReceiver

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/_Layout.cshtml";
}

<h2>
    @TnT.LangResource.GlobalRes.UsersCreate
    <a style="float:right; margin-right:5px;" href='@Url.Action("EPCISReceiver", "EPCIS")' class="btn btn-danger btn-icon icon-left">
        @TnT.LangResource.GlobalRes.cmnBtnBackToList
        <i class="fa fa-reply"></i>
    </a>
</h2>


@using (Html.BeginForm("Create", "EPCIS", FormMethod.Post, new { @id = "frmEPCISReceiver" })) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisCompanyName, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisCountry, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.Country, "Id", "CountryName"), TnT.LangResource.GlobalRes.ProductDrpSelectCountry, new { @class = "form-control", onchange = "Action(this.value);" })
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisStateOrRegion, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.StateId, (SelectList)ViewBag.StateOrRegion, TnT.LangResource.GlobalRes.EPCISRecevierDrpState, new { @class = "form-control", @id = "StateId" })
                        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisCity, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisStreet1, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisStreet1, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Street2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.street3, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisStreet1, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.street3, new { htmlAttributes = new { @class = "form-control" }  })
                        @Html.ValidationMessageFor(model => model.street3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.site, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisSite, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.site, new { htmlAttributes = new { @class = "form-control", min = 1, max = 128 } })
                        @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisPostalCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.GLN, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisGLN, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GLN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GLN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisLatitude, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.logitude, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisLongitude, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.logitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.logitude, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.Label(@TnT.LangResource.GlobalRes.EPCISCreateExtGLN, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.EPCISCreateGLN, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Extension, new { htmlAttributes = new { @class = "form-control NumbersOnly" }, min = 1, max = 128 })
                        @Html.ValidationMessageFor(model => model.Extension, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.countryCode, htmlAttributes: new { @class = "control-label col-md-2 popover-default", @data_toggle = "popover", @data_trigger = "hover", data_placement = "top", @data_content = TnT.LangResource.GlobalRes.ToolTipEpcisCountryCode, @data_original_title = "Field Information" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.countryCode, new { htmlAttributes = new { @class = "form-control NumbersOnly" }, min = 1, max = 128 })
                        @Html.ValidationMessageFor(model => model.countryCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    <input id="btnSubmit" type="button" value="@TnT.LangResource.GlobalRes.UsersCreate" class="btn btn-info btn-default" />
                </div>
            </div>
        </div>
            }

           
<script>
    function Action(ConID) {
        debugger;
        $.ajax({
            url: '@Url.Action("getStateOrRegion", "EPCIS")',
            type: "POST",
            dataType: 'json',
            data: { "Conid": ConID },
            success: function (data) {

                if (data != null) {
                    debugger;

                    $("#StateId").find("option").remove();
                    var optionhtml1 = '<option value="' +
               0 + '">' + "@TnT.LangResource.GlobalRes.EPCISRecevierDrpState" + '</option>';
                    $("#StateId").append(optionhtml1);

                    //$.each(data, function (i) {

                    for (i = 0; i < data.length; i++) {

                        var optionhtml = '<option value="' +
                    data[i].ID + '">' + data[i].StateName + '</option>';
                        $("#StateId").append(optionhtml);
                    }
                }
            },
            error: function (data) {

                toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

            }
        });
    }

    $("#btnSubmit").click(function () {
        var CompanyName = $("#CompanyName").val();
        var CountryId = $("#CountryId").val();
        var StateId = $("#StateId").val();
        var City = $("#City").val();
        var Street1 = $("#Street1").val();
        var Street2 = $("#Street2").val();
        var PostalCode = $("#PostalCode").val();
        var GLN = $("#GLN").val();
        var countryCode = $("#countryCode").val();
        var Extension = $("#Extension").val();
        debugger;
        var msgPOST = "";
        if (CompanyName == "") {
            showMessage("CompanyName", "@TnT.LangResource.GlobalRes.showMsgCustomerCreateCompanyName");
            msgPOST += "@TnT.LangResource.GlobalRes.showMsgCustomerCreateCompanyName";
        } else {
            clearColor("CompanyName");
        }
        if (CountryId == "") {
            showMessage("CountryId", "@TnT.LangResource.GlobalRes.showMsgCustomerCreateCountry");
            msgPOST += "@TnT.LangResource.GlobalRes.showMsgCustomerCreateCountry";
        } else {
            clearColor("CountryId");
        }
        if (StateId == "") {
            showMessage("StateId", "@TnT.LangResource.GlobalRes.toastrSettingSelectState");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrSettingSelectState";
        } else {
            clearColor("StateId");
        }
        if (City == "") {
            showMessage("City", "@TnT.LangResource.GlobalRes.toastrEPCISCreateCity");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCISCreateCity";
        } else {
            clearColor("City");
        }
        if (Street1 == "") {
            showMessage("Street1", "@TnT.LangResource.GlobalRes.toastrEPCSCreateStreet1");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCSCreateStreet1";
        } else {
            clearColor("Street1");
        }
        if (Street2 == "") {
            showMessage("Street2", "@TnT.LangResource.GlobalRes.toastrEPCSCreateStreet2");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCSCreateStreet2";
        } else {
            clearColor("Street2");
        }
        if (PostalCode == "") {
            showMessage("PostalCode", "@TnT.LangResource.GlobalRes.toastrEPCISCreatePostalCode");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCISCreatePostalCode";
        } else {
            clearColor("PostalCode");
        }
        if (GLN == "") {
            showMessage("GLN", "@TnT.LangResource.GlobalRes.toastrEPCISCreateGLN");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCISCreateGLN";
        } else {
            clearColor("GLN");
        }
        if (countryCode == "") {
            showMessage("countryCode", "@TnT.LangResource.GlobalRes.toastrEPPCISReceivercountryCode");
            msgPOST += "@TnT.LangResource.GlobalRes.toastrEPCISCreateGLN";
        } else {
            clearColor("countryCode");
        }

        if (Extension == "") {
            showMessage("Extension", "@TnT.LangResource.GlobalRes.EPCISCreateEnterExtGLN");
            msgPOST += "@TnT.LangResource.GlobalRes.EPCISCreateEnterExtGLN";
        } else {
            clearColor("Extension");
        }

        if (msgPOST == "") {
            formSubmit();
        }
    });

    $("#CompanyName").blur(function () {
        var compname = $("#CompanyName").val();

        if (compname != "") {
            $.ajax({
                url: '@Url.Action("getCompanyName", "EPCIS")',
                type: "POST",
                dataType: 'json',
                data: { "CompName": compname },
                success: function (data) {

                    if (data != null) {
                        debugger;
                        if (data == false) {
                            toastr.warning("@TnT.LangResource.GlobalRes.toastrEPCISReceiverCompNameAlreadyExist");
                            $("#CompanyName").val("");

                        } else {
                            $("#CompanyName").css("border", "green 1px solid");
                        }
                    }
                },
                error: function (data) {

                    toastr.warning("@TnT.LangResource.GlobalRes.toastrCustomerCreateError");

                }
            });
        }
        else {
            $("#CompanyName").css("border", "red 1px solid");
        }

    });
    function formSubmit() {
        document.getElementById("frmEPCISReceiver").submit();
    }
    $(".NumbersOnly").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });



    function showMessage(elementID, msg) {
        toastr.warning(msg);
        $("#" + elementID).val("");
        $("#" + elementID).css("border", "red 1px solid");
        return false;
    }
    function clearColor(elementID) {
        $("#" + elementID).css("border", "green 1px solid");
    }
</script>
            @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
